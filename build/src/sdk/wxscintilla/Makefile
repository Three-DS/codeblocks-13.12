# Makefile.in generated by automake 1.11.6 from Makefile.am.
# src/sdk/wxscintilla/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




VPATH = ../../../../src/sdk/wxscintilla
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/codeblocks
pkgincludedir = $(includedir)/codeblocks
pkglibdir = $(libdir)/codeblocks
pkglibexecdir = $(libexecdir)/codeblocks
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = src/sdk/wxscintilla
DIST_COMMON = README $(noinst_HEADERS) $(sdk_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/revision.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libwxscintilla_la_LIBADD =
am_libwxscintilla_la_OBJECTS = PlatWX.lo ScintillaWX.lo wxscintilla.lo \
	LexA68k.lo LexAPDL.lo LexASY.lo LexAU3.lo LexAVE.lo LexAVS.lo \
	LexAbaqus.lo LexAda.lo LexAsm.lo LexAsn1.lo LexBaan.lo \
	LexBash.lo LexBasic.lo LexBullant.lo LexCLW.lo LexCOBOL.lo \
	LexCPP.lo LexCSS.lo LexCaml.lo LexCmake.lo LexCoffeeScript.lo \
	LexConf.lo LexCrontab.lo LexCsound.lo LexD.lo LexECL.lo \
	LexEScript.lo LexEiffel.lo LexErlang.lo LexFlagship.lo \
	LexForth.lo LexFortran.lo LexGAP.lo LexGui4Cli.lo LexHTML.lo \
	LexHaskell.lo LexInno.lo LexKix.lo LexKVIrc.lo LexLaTeX.lo \
	LexLisp.lo LexLout.lo LexLua.lo LexMMIXAL.lo LexMPT.lo \
	LexMSSQL.lo LexMagik.lo LexMarkdown.lo LexMatlab.lo \
	LexMetapost.lo LexModula.lo LexMySQL.lo LexNimrod.lo \
	LexNsis.lo LexOScript.lo LexOpal.lo LexOthers.lo LexPB.lo \
	LexPLM.lo LexPO.lo LexPOV.lo LexPS.lo LexPascal.lo LexPerl.lo \
	LexPowerPro.lo LexPowerShell.lo LexProgress.lo LexPython.lo \
	LexR.lo LexRebol.lo LexRuby.lo LexSML.lo LexSQL.lo \
	LexScriptol.lo LexSmalltalk.lo LexSorcus.lo LexSpecman.lo \
	LexSpice.lo LexSTTXT.lo LexTACL.lo LexTADS3.lo LexTAL.lo \
	LexTCL.lo LexTCMD.lo LexTeX.lo LexTxt2tags.lo LexVB.lo \
	LexVHDL.lo LexVerilog.lo LexVisualProlog.lo LexYAML.lo \
	Accessor.lo CharacterCategory.lo CharacterSet.lo LexerBase.lo \
	LexerModule.lo LexerNoExceptions.lo LexerSimple.lo \
	PropSetSimple.lo StyleContext.lo WordList.lo AutoComplete.lo \
	CallTip.lo CaseConvert.lo CaseFolder.lo Catalogue.lo \
	CellBuffer.lo CharClassify.lo ContractionState.lo \
	Decoration.lo Document.lo Editor.lo ExternalLexer.lo \
	Indicator.lo KeyMap.lo LineMarker.lo PerLine.lo \
	PositionCache.lo RESearch.lo RunStyles.lo ScintillaBase.lo \
	Selection.lo Style.lo UniConversion.lo ViewStyle.lo XPM.lo
libwxscintilla_la_OBJECTS = $(am_libwxscintilla_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/src/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libwxscintilla_la_SOURCES)
DIST_SOURCES = $(libwxscintilla_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(sdkdir)"
HEADERS = $(noinst_HEADERS) $(sdk_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /usr/local/src/c.cpp.h/_/codeblocks/13.12/missing --run aclocal-1.11
AMTAR = ${SHELL} /usr/local/src/c.cpp.h/_/codeblocks/13.12/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /usr/local/src/c.cpp.h/_/codeblocks/13.12/missing --run autoconf
AUTOHEADER = ${SHELL} /usr/local/src/c.cpp.h/_/codeblocks/13.12/missing --run autoheader
AUTOMAKE = ${SHELL} /usr/local/src/c.cpp.h/_/codeblocks/13.12/missing --run automake-1.11
AWK = mawk
BUILD_AUTOVERSIONING = 
BUILD_BROWSETRACKER = 
BUILD_BYOGAMES = 
BUILD_CBKODERS = 
BUILD_CCCC = 
BUILD_CODESNIPPETS = 
BUILD_CODESTAT = 
BUILD_COPYSTRINGS = 
BUILD_CPPCHECK = 
BUILD_CSCOPE = 
BUILD_DOXYBLOCKS = 
BUILD_DRAGSCROLL = 
BUILD_EDITORCONFIG = 
BUILD_EDITORTWEAKS = 
BUILD_ENVVARS = 
BUILD_EXPORTER = 
BUILD_FILEMANAGER = 
BUILD_HEADERFIXUP = 
BUILD_HELP = 
BUILD_HEXEDITOR = 
BUILD_INCSEARCH = 
BUILD_KEYBINDER = 
BUILD_LIBFINDER = 
BUILD_MOUSESAP = 
BUILD_NASSISHNEIDERMAN = 
BUILD_PROFILER = 
BUILD_REGEX = 
BUILD_REOPENEDITOR = 
BUILD_SMARTINDENT = 
BUILD_SPELLCHECKER = 
BUILD_SYMTAB = 
BUILD_THREADSEARCH = 
BUILD_TOOLSPLUS = 
BUILD_VALGRIND = 
BUILD_WXCONTRIB = 
BUILD_WXSMITH = 
BUILD_WXSMITHAUI = 
BUILD_WXSMITHCONTRIB = 
CB_FONTCONFIG_CFLAGS = 
CB_FONTCONFIG_LIBS = 
CB_GAMIN_CFLAGS = 
CB_GAMIN_LIBS = 
CB_HUNSPELL_CFLAGS = 
CB_HUNSPELL_LIBS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -O2 -ffast-math -DCB_AUTOCONF -g -O2
CODEBLOCKS_PLATFORM = gtk
CODEBLOCKS_VERSION_INFO = 0:1:0
CPP = gcc -E
CPPFLAGS =  -ansi -DTIXML_USE_STL
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Wno-unused-local-typedefs -O2 -ffast-math -DCB_AUTOCONF  -DCB_PRECOMP -Winvalid-pch -fPIC -DPIC -fexceptions
CYGPATH_W = echo
DATE = 2013-12-08 15:03:48
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FONTCONFIG_CFLAGS = 
FONTCONFIG_LIBS = 
GAMIN_CFLAGS = 
GAMIN_LIBS = 
GCC_MAJOR_VERSION = 4
GCC_MINOR_VERSION = 8
GCC_PATCH_VERSION = 
GCC_VERSION = 
GREP = /bin/grep
GTK2_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz  
GTK2_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfontconfig -lgobject-2.0 -lglib-2.0 -lfreetype  
HAVE_PKG_CONFIG = yes
HUNSPELL_CFLAGS = 
HUNSPELL_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -Wl,--no-undefined
LIBOBJS = 
LIBS = -lpthread -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MACSETFILE = @true
MAKEINFO = ${SHELL} /usr/local/src/c.cpp.h/_/codeblocks/13.12/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = codeblocks
PACKAGE_BUGREPORT = 
PACKAGE_NAME = codeblocks
PACKAGE_STRING = codeblocks 13.12-9491
PACKAGE_TARNAME = codeblocks
PACKAGE_URL = 
PACKAGE_VERSION = 13.12-9491
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLATFORM_CFLAGS = -I/usr/X11R6/include
PLATFORM_LIBS = -L/usr/X11R6/lib -lX11
PLUGIN_FLAGS = -shared -avoid-version
POSTLINK_COMMAND = @true
RANLIB = ranlib
RC = 
REVISION = 9491
REZ = 
SED = /bin/sed
SETFILE = 
SET_MAKE = 
SHARED_FLAGS = -shared
SHELL = /bin/bash
STRIP = strip
VERSION = 13.12-9491
WXPROPGRID_DIR = wxpropgrid
WXPROPGRID_INCLUDE = -I$(top_srcdir)/src/sdk/wxpropgrid/include
WXPROPGRID_LIB = wxpropgrid/libwxpropgrid.la
WX_CFLAGS = -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-release-2.8 -I/usr/include/wx-2.8 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -pthread
WX_CFLAGS_ONLY = -pthread
WX_CONFIG_PATH = /usr/bin/wx-config
WX_CPPFLAGS = -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-release-2.8 -I/usr/include/wx-2.8 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__
WX_CXXFLAGS = -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-release-2.8 -I/usr/include/wx-2.8 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -pthread
WX_CXXFLAGS_ONLY = 
WX_GTK2_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz  
WX_GTK2_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfontconfig -lgobject-2.0 -lglib-2.0 -lfreetype  
WX_LIBS = -L/usr/lib/x86_64-linux-gnu -pthread -Wl,-Bsymbolic-functions -Wl,-z,relro  -L/usr/lib/x86_64-linux-gnu   -lwx_gtk2u_richtext-2.8 -lwx_gtk2u_aui-2.8 -lwx_gtk2u_xrc-2.8 -lwx_gtk2u_qa-2.8 -lwx_gtk2u_html-2.8 -lwx_gtk2u_adv-2.8 -lwx_gtk2u_core-2.8 -lwx_baseu_xml-2.8 -lwx_baseu_net-2.8 -lwx_baseu-2.8 
WX_LIBS_STATIC = 
WX_RESCOMP = 
WX_VERSION = 2.8.12
WX_X11_CFLAGS = 
WX_X11_LIBS =  -lX11 
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /usr/local/src/c.cpp.h/_/codeblocks/13.12/build/src/sdk/wxscintilla
abs_srcdir = /usr/local/src/c.cpp.h/_/codeblocks/13.12/build/../src/sdk/wxscintilla
abs_top_builddir = /usr/local/src/c.cpp.h/_/codeblocks/13.12/build
abs_top_srcdir = /usr/local/src/c.cpp.h/_/codeblocks/13.12/build/..
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chf - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
codeblocks_PCH_FLAGS = -DCB_PRECOMP -Winvalid-pch
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /usr/local/src/c.cpp.h/_/codeblocks/13.12/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../../../src/sdk/wxscintilla
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../../..
AM_CPPFLAGS = $(WX_CXXFLAGS) \
			-I$(srcdir)/include \
			-I$(srcdir)/src/scintilla/include \
			-I$(srcdir)/src/scintilla/lexlib \
			-I$(srcdir)/src/scintilla/src \
			-DSCI_LEXER \
			-DLINK_LEXERS \
			-DGTK \
			-D__WX__

noinst_LTLIBRARIES = libwxscintilla.la
libwxscintilla_la_SOURCES = src/PlatWX.cpp \
			src/ScintillaWX.cpp \
			src/wxscintilla.cpp \
			src/scintilla/lexers/LexA68k.cxx \
			src/scintilla/lexers/LexAPDL.cxx \
			src/scintilla/lexers/LexASY.cxx \
			src/scintilla/lexers/LexAU3.cxx \
			src/scintilla/lexers/LexAVE.cxx \
			src/scintilla/lexers/LexAVS.cxx \
			src/scintilla/lexers/LexAbaqus.cxx \
			src/scintilla/lexers/LexAda.cxx \
			src/scintilla/lexers/LexAsm.cxx \
			src/scintilla/lexers/LexAsn1.cxx \
			src/scintilla/lexers/LexBaan.cxx \
			src/scintilla/lexers/LexBash.cxx \
			src/scintilla/lexers/LexBasic.cxx \
			src/scintilla/lexers/LexBullant.cxx \
			src/scintilla/lexers/LexCLW.cxx \
			src/scintilla/lexers/LexCOBOL.cxx \
			src/scintilla/lexers/LexCPP.cxx \
			src/scintilla/lexers/LexCSS.cxx \
			src/scintilla/lexers/LexCaml.cxx \
			src/scintilla/lexers/LexCmake.cxx \
			src/scintilla/lexers/LexCoffeeScript.cxx \
			src/scintilla/lexers/LexConf.cxx \
			src/scintilla/lexers/LexCrontab.cxx \
			src/scintilla/lexers/LexCsound.cxx \
			src/scintilla/lexers/LexD.cxx \
			src/scintilla/lexers/LexECL.cxx \
			src/scintilla/lexers/LexEScript.cxx \
			src/scintilla/lexers/LexEiffel.cxx \
			src/scintilla/lexers/LexErlang.cxx \
			src/scintilla/lexers/LexFlagship.cxx \
			src/scintilla/lexers/LexForth.cxx \
			src/scintilla/lexers/LexFortran.cxx \
			src/scintilla/lexers/LexGAP.cxx \
			src/scintilla/lexers/LexGui4Cli.cxx \
			src/scintilla/lexers/LexHTML.cxx \
			src/scintilla/lexers/LexHaskell.cxx \
			src/scintilla/lexers/LexInno.cxx \
			src/scintilla/lexers/LexKix.cxx \
			src/scintilla/lexers/LexKVIrc.cxx \
			src/scintilla/lexers/LexLaTeX.cxx \
			src/scintilla/lexers/LexLisp.cxx \
			src/scintilla/lexers/LexLout.cxx \
			src/scintilla/lexers/LexLua.cxx \
			src/scintilla/lexers/LexMMIXAL.cxx \
			src/scintilla/lexers/LexMPT.cxx \
			src/scintilla/lexers/LexMSSQL.cxx \
			src/scintilla/lexers/LexMagik.cxx \
			src/scintilla/lexers/LexMarkdown.cxx \
			src/scintilla/lexers/LexMatlab.cxx \
			src/scintilla/lexers/LexMetapost.cxx \
			src/scintilla/lexers/LexModula.cxx \
			src/scintilla/lexers/LexMySQL.cxx \
			src/scintilla/lexers/LexNimrod.cxx \
			src/scintilla/lexers/LexNsis.cxx \
			src/scintilla/lexers/LexOScript.cxx \
			src/scintilla/lexers/LexOpal.cxx \
			src/scintilla/lexers/LexOthers.cxx \
			src/scintilla/lexers/LexPB.cxx \
			src/scintilla/lexers/LexPLM.cxx \
			src/scintilla/lexers/LexPO.cxx \
			src/scintilla/lexers/LexPOV.cxx \
			src/scintilla/lexers/LexPS.cxx \
			src/scintilla/lexers/LexPascal.cxx \
			src/scintilla/lexers/LexPerl.cxx \
			src/scintilla/lexers/LexPowerPro.cxx \
			src/scintilla/lexers/LexPowerShell.cxx \
			src/scintilla/lexers/LexProgress.cxx \
			src/scintilla/lexers/LexPython.cxx \
			src/scintilla/lexers/LexR.cxx \
			src/scintilla/lexers/LexRebol.cxx \
			src/scintilla/lexers/LexRuby.cxx \
			src/scintilla/lexers/LexSML.cxx \
			src/scintilla/lexers/LexSQL.cxx \
			src/scintilla/lexers/LexScriptol.cxx \
			src/scintilla/lexers/LexSmalltalk.cxx \
			src/scintilla/lexers/LexSorcus.cxx \
			src/scintilla/lexers/LexSpecman.cxx \
			src/scintilla/lexers/LexSpice.cxx \
			src/scintilla/lexers/LexSTTXT.cxx \
			src/scintilla/lexers/LexTACL.cxx \
			src/scintilla/lexers/LexTADS3.cxx \
			src/scintilla/lexers/LexTAL.cxx \
			src/scintilla/lexers/LexTCL.cxx \
			src/scintilla/lexers/LexTCMD.cxx \
			src/scintilla/lexers/LexTeX.cxx \
			src/scintilla/lexers/LexTxt2tags.cxx \
			src/scintilla/lexers/LexVB.cxx \
			src/scintilla/lexers/LexVHDL.cxx \
			src/scintilla/lexers/LexVerilog.cxx \
			src/scintilla/lexers/LexVisualProlog.cxx \
			src/scintilla/lexers/LexYAML.cxx \
			src/scintilla/lexlib/Accessor.cxx \
			src/scintilla/lexlib/CharacterCategory.cxx \
			src/scintilla/lexlib/CharacterSet.cxx \
			src/scintilla/lexlib/LexerBase.cxx \
			src/scintilla/lexlib/LexerModule.cxx \
			src/scintilla/lexlib/LexerNoExceptions.cxx \
			src/scintilla/lexlib/LexerSimple.cxx \
			src/scintilla/lexlib/PropSetSimple.cxx \
			src/scintilla/lexlib/StyleContext.cxx \
			src/scintilla/lexlib/WordList.cxx \
			src/scintilla/src/AutoComplete.cxx \
			src/scintilla/src/CallTip.cxx \
			src/scintilla/src/CaseConvert.cxx \
			src/scintilla/src/CaseFolder.cxx \
			src/scintilla/src/Catalogue.cxx \
			src/scintilla/src/CellBuffer.cxx \
			src/scintilla/src/CharClassify.cxx \
			src/scintilla/src/ContractionState.cxx \
			src/scintilla/src/Decoration.cxx \
			src/scintilla/src/Document.cxx \
			src/scintilla/src/Editor.cxx \
			src/scintilla/src/ExternalLexer.cxx \
			src/scintilla/src/Indicator.cxx \
			src/scintilla/src/KeyMap.cxx \
			src/scintilla/src/LineMarker.cxx \
			src/scintilla/src/PerLine.cxx \
			src/scintilla/src/PositionCache.cxx \
			src/scintilla/src/RESearch.cxx \
			src/scintilla/src/RunStyles.cxx \
			src/scintilla/src/ScintillaBase.cxx \
			src/scintilla/src/Selection.cxx \
			src/scintilla/src/Style.cxx \
			src/scintilla/src/UniConversion.cxx \
			src/scintilla/src/ViewStyle.cxx \
			src/scintilla/src/XPM.cxx

noinst_HEADERS = src/PlatWX.h \
			src/ScintillaWX.h \
			src/scintilla/include/ILexer.h \
			src/scintilla/include/Platform.h \
			src/scintilla/include/SciLexer.h \
			src/scintilla/include/Scintilla.h \
			src/scintilla/include/ScintillaWidget.h \
			src/scintilla/lexlib/Accessor.h \
			src/scintilla/lexlib/CharacterCategory.h \
			src/scintilla/lexlib/CharacterSet.h \
			src/scintilla/lexlib/LexAccessor.h \
			src/scintilla/lexlib/LexerBase.h \
			src/scintilla/lexlib/LexerModule.h \
			src/scintilla/lexlib/LexerNoExceptions.h \
			src/scintilla/lexlib/LexerSimple.h \
			src/scintilla/lexlib/OptionSet.h \
			src/scintilla/lexlib/PropSetSimple.h \
			src/scintilla/lexlib/SparseState.h \
			src/scintilla/lexlib/StyleContext.h \
			src/scintilla/lexlib/SubStyles.h \
			src/scintilla/lexlib/WordList.h \
			src/scintilla/src/AutoComplete.h \
			src/scintilla/src/CallTip.h \
			src/scintilla/src/CaseConvert.h \
			src/scintilla/src/CaseFolder.h \
			src/scintilla/src/Catalogue.h \
			src/scintilla/src/CellBuffer.h \
			src/scintilla/src/CharClassify.h \
			src/scintilla/src/ContractionState.h \
			src/scintilla/src/Decoration.h \
			src/scintilla/src/Document.h \
			src/scintilla/src/Editor.h \
			src/scintilla/src/ExternalLexer.h \
			src/scintilla/src/FontQuality.h \
			src/scintilla/src/Indicator.h \
			src/scintilla/src/KeyMap.h \
			src/scintilla/src/LineMarker.h \
			src/scintilla/src/Partitioning.h \
			src/scintilla/src/PerLine.h \
			src/scintilla/src/PositionCache.h \
			src/scintilla/src/RESearch.h \
			src/scintilla/src/RunStyles.h \
			src/scintilla/src/ScintillaBase.h \
			src/scintilla/src/Selection.h \
			src/scintilla/src/SplitVector.h \
			src/scintilla/src/Style.h \
			src/scintilla/src/UniConversion.h \
			src/scintilla/src/UnicodeFromUTF8.h \
			src/scintilla/src/ViewStyle.h \
			src/scintilla/src/XPM.h

sdkdir = $(includedir)/codeblocks/wxscintilla/include/wx
sdk_HEADERS = include/wx/wxscintilla.h
EXTRA_DIST = $(srcdir)/Readme \
	$(srcdir)/build/*.txt \
	$(srcdir)/build/Makefile \
	$(srcdir)/build/wxscintilla.* \
	$(srcdir)/src/scintilla/*.txt \
	$(srcdir)/src/scintilla/README \
	$(srcdir)/src/scintilla/include/*.iface \
	$(srcdir)/src/scintilla/src/*.properties \
	$(srcdir)/src/scintilla/cppcheck.suppress


# add upper-case copy
CLEANFILES = README
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/sdk/wxscintilla/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/sdk/wxscintilla/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libwxscintilla.la: $(libwxscintilla_la_OBJECTS) $(libwxscintilla_la_DEPENDENCIES) $(EXTRA_libwxscintilla_la_DEPENDENCIES) 
	$(CXXLINK)  $(libwxscintilla_la_OBJECTS) $(libwxscintilla_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Accessor.Plo
include ./$(DEPDIR)/AutoComplete.Plo
include ./$(DEPDIR)/CallTip.Plo
include ./$(DEPDIR)/CaseConvert.Plo
include ./$(DEPDIR)/CaseFolder.Plo
include ./$(DEPDIR)/Catalogue.Plo
include ./$(DEPDIR)/CellBuffer.Plo
include ./$(DEPDIR)/CharClassify.Plo
include ./$(DEPDIR)/CharacterCategory.Plo
include ./$(DEPDIR)/CharacterSet.Plo
include ./$(DEPDIR)/ContractionState.Plo
include ./$(DEPDIR)/Decoration.Plo
include ./$(DEPDIR)/Document.Plo
include ./$(DEPDIR)/Editor.Plo
include ./$(DEPDIR)/ExternalLexer.Plo
include ./$(DEPDIR)/Indicator.Plo
include ./$(DEPDIR)/KeyMap.Plo
include ./$(DEPDIR)/LexA68k.Plo
include ./$(DEPDIR)/LexAPDL.Plo
include ./$(DEPDIR)/LexASY.Plo
include ./$(DEPDIR)/LexAU3.Plo
include ./$(DEPDIR)/LexAVE.Plo
include ./$(DEPDIR)/LexAVS.Plo
include ./$(DEPDIR)/LexAbaqus.Plo
include ./$(DEPDIR)/LexAda.Plo
include ./$(DEPDIR)/LexAsm.Plo
include ./$(DEPDIR)/LexAsn1.Plo
include ./$(DEPDIR)/LexBaan.Plo
include ./$(DEPDIR)/LexBash.Plo
include ./$(DEPDIR)/LexBasic.Plo
include ./$(DEPDIR)/LexBullant.Plo
include ./$(DEPDIR)/LexCLW.Plo
include ./$(DEPDIR)/LexCOBOL.Plo
include ./$(DEPDIR)/LexCPP.Plo
include ./$(DEPDIR)/LexCSS.Plo
include ./$(DEPDIR)/LexCaml.Plo
include ./$(DEPDIR)/LexCmake.Plo
include ./$(DEPDIR)/LexCoffeeScript.Plo
include ./$(DEPDIR)/LexConf.Plo
include ./$(DEPDIR)/LexCrontab.Plo
include ./$(DEPDIR)/LexCsound.Plo
include ./$(DEPDIR)/LexD.Plo
include ./$(DEPDIR)/LexECL.Plo
include ./$(DEPDIR)/LexEScript.Plo
include ./$(DEPDIR)/LexEiffel.Plo
include ./$(DEPDIR)/LexErlang.Plo
include ./$(DEPDIR)/LexFlagship.Plo
include ./$(DEPDIR)/LexForth.Plo
include ./$(DEPDIR)/LexFortran.Plo
include ./$(DEPDIR)/LexGAP.Plo
include ./$(DEPDIR)/LexGui4Cli.Plo
include ./$(DEPDIR)/LexHTML.Plo
include ./$(DEPDIR)/LexHaskell.Plo
include ./$(DEPDIR)/LexInno.Plo
include ./$(DEPDIR)/LexKVIrc.Plo
include ./$(DEPDIR)/LexKix.Plo
include ./$(DEPDIR)/LexLaTeX.Plo
include ./$(DEPDIR)/LexLisp.Plo
include ./$(DEPDIR)/LexLout.Plo
include ./$(DEPDIR)/LexLua.Plo
include ./$(DEPDIR)/LexMMIXAL.Plo
include ./$(DEPDIR)/LexMPT.Plo
include ./$(DEPDIR)/LexMSSQL.Plo
include ./$(DEPDIR)/LexMagik.Plo
include ./$(DEPDIR)/LexMarkdown.Plo
include ./$(DEPDIR)/LexMatlab.Plo
include ./$(DEPDIR)/LexMetapost.Plo
include ./$(DEPDIR)/LexModula.Plo
include ./$(DEPDIR)/LexMySQL.Plo
include ./$(DEPDIR)/LexNimrod.Plo
include ./$(DEPDIR)/LexNsis.Plo
include ./$(DEPDIR)/LexOScript.Plo
include ./$(DEPDIR)/LexOpal.Plo
include ./$(DEPDIR)/LexOthers.Plo
include ./$(DEPDIR)/LexPB.Plo
include ./$(DEPDIR)/LexPLM.Plo
include ./$(DEPDIR)/LexPO.Plo
include ./$(DEPDIR)/LexPOV.Plo
include ./$(DEPDIR)/LexPS.Plo
include ./$(DEPDIR)/LexPascal.Plo
include ./$(DEPDIR)/LexPerl.Plo
include ./$(DEPDIR)/LexPowerPro.Plo
include ./$(DEPDIR)/LexPowerShell.Plo
include ./$(DEPDIR)/LexProgress.Plo
include ./$(DEPDIR)/LexPython.Plo
include ./$(DEPDIR)/LexR.Plo
include ./$(DEPDIR)/LexRebol.Plo
include ./$(DEPDIR)/LexRuby.Plo
include ./$(DEPDIR)/LexSML.Plo
include ./$(DEPDIR)/LexSQL.Plo
include ./$(DEPDIR)/LexSTTXT.Plo
include ./$(DEPDIR)/LexScriptol.Plo
include ./$(DEPDIR)/LexSmalltalk.Plo
include ./$(DEPDIR)/LexSorcus.Plo
include ./$(DEPDIR)/LexSpecman.Plo
include ./$(DEPDIR)/LexSpice.Plo
include ./$(DEPDIR)/LexTACL.Plo
include ./$(DEPDIR)/LexTADS3.Plo
include ./$(DEPDIR)/LexTAL.Plo
include ./$(DEPDIR)/LexTCL.Plo
include ./$(DEPDIR)/LexTCMD.Plo
include ./$(DEPDIR)/LexTeX.Plo
include ./$(DEPDIR)/LexTxt2tags.Plo
include ./$(DEPDIR)/LexVB.Plo
include ./$(DEPDIR)/LexVHDL.Plo
include ./$(DEPDIR)/LexVerilog.Plo
include ./$(DEPDIR)/LexVisualProlog.Plo
include ./$(DEPDIR)/LexYAML.Plo
include ./$(DEPDIR)/LexerBase.Plo
include ./$(DEPDIR)/LexerModule.Plo
include ./$(DEPDIR)/LexerNoExceptions.Plo
include ./$(DEPDIR)/LexerSimple.Plo
include ./$(DEPDIR)/LineMarker.Plo
include ./$(DEPDIR)/PerLine.Plo
include ./$(DEPDIR)/PlatWX.Plo
include ./$(DEPDIR)/PositionCache.Plo
include ./$(DEPDIR)/PropSetSimple.Plo
include ./$(DEPDIR)/RESearch.Plo
include ./$(DEPDIR)/RunStyles.Plo
include ./$(DEPDIR)/ScintillaBase.Plo
include ./$(DEPDIR)/ScintillaWX.Plo
include ./$(DEPDIR)/Selection.Plo
include ./$(DEPDIR)/Style.Plo
include ./$(DEPDIR)/StyleContext.Plo
include ./$(DEPDIR)/UniConversion.Plo
include ./$(DEPDIR)/ViewStyle.Plo
include ./$(DEPDIR)/WordList.Plo
include ./$(DEPDIR)/XPM.Plo
include ./$(DEPDIR)/wxscintilla.Plo

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

PlatWX.lo: src/PlatWX.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PlatWX.lo -MD -MP -MF $(DEPDIR)/PlatWX.Tpo -c -o PlatWX.lo `test -f 'src/PlatWX.cpp' || echo '$(srcdir)/'`src/PlatWX.cpp
	$(am__mv) $(DEPDIR)/PlatWX.Tpo $(DEPDIR)/PlatWX.Plo
#	source='src/PlatWX.cpp' object='PlatWX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PlatWX.lo `test -f 'src/PlatWX.cpp' || echo '$(srcdir)/'`src/PlatWX.cpp

ScintillaWX.lo: src/ScintillaWX.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScintillaWX.lo -MD -MP -MF $(DEPDIR)/ScintillaWX.Tpo -c -o ScintillaWX.lo `test -f 'src/ScintillaWX.cpp' || echo '$(srcdir)/'`src/ScintillaWX.cpp
	$(am__mv) $(DEPDIR)/ScintillaWX.Tpo $(DEPDIR)/ScintillaWX.Plo
#	source='src/ScintillaWX.cpp' object='ScintillaWX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScintillaWX.lo `test -f 'src/ScintillaWX.cpp' || echo '$(srcdir)/'`src/ScintillaWX.cpp

wxscintilla.lo: src/wxscintilla.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wxscintilla.lo -MD -MP -MF $(DEPDIR)/wxscintilla.Tpo -c -o wxscintilla.lo `test -f 'src/wxscintilla.cpp' || echo '$(srcdir)/'`src/wxscintilla.cpp
	$(am__mv) $(DEPDIR)/wxscintilla.Tpo $(DEPDIR)/wxscintilla.Plo
#	source='src/wxscintilla.cpp' object='wxscintilla.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wxscintilla.lo `test -f 'src/wxscintilla.cpp' || echo '$(srcdir)/'`src/wxscintilla.cpp

LexA68k.lo: src/scintilla/lexers/LexA68k.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexA68k.lo -MD -MP -MF $(DEPDIR)/LexA68k.Tpo -c -o LexA68k.lo `test -f 'src/scintilla/lexers/LexA68k.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexA68k.cxx
	$(am__mv) $(DEPDIR)/LexA68k.Tpo $(DEPDIR)/LexA68k.Plo
#	source='src/scintilla/lexers/LexA68k.cxx' object='LexA68k.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexA68k.lo `test -f 'src/scintilla/lexers/LexA68k.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexA68k.cxx

LexAPDL.lo: src/scintilla/lexers/LexAPDL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAPDL.lo -MD -MP -MF $(DEPDIR)/LexAPDL.Tpo -c -o LexAPDL.lo `test -f 'src/scintilla/lexers/LexAPDL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAPDL.cxx
	$(am__mv) $(DEPDIR)/LexAPDL.Tpo $(DEPDIR)/LexAPDL.Plo
#	source='src/scintilla/lexers/LexAPDL.cxx' object='LexAPDL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAPDL.lo `test -f 'src/scintilla/lexers/LexAPDL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAPDL.cxx

LexASY.lo: src/scintilla/lexers/LexASY.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexASY.lo -MD -MP -MF $(DEPDIR)/LexASY.Tpo -c -o LexASY.lo `test -f 'src/scintilla/lexers/LexASY.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexASY.cxx
	$(am__mv) $(DEPDIR)/LexASY.Tpo $(DEPDIR)/LexASY.Plo
#	source='src/scintilla/lexers/LexASY.cxx' object='LexASY.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexASY.lo `test -f 'src/scintilla/lexers/LexASY.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexASY.cxx

LexAU3.lo: src/scintilla/lexers/LexAU3.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAU3.lo -MD -MP -MF $(DEPDIR)/LexAU3.Tpo -c -o LexAU3.lo `test -f 'src/scintilla/lexers/LexAU3.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAU3.cxx
	$(am__mv) $(DEPDIR)/LexAU3.Tpo $(DEPDIR)/LexAU3.Plo
#	source='src/scintilla/lexers/LexAU3.cxx' object='LexAU3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAU3.lo `test -f 'src/scintilla/lexers/LexAU3.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAU3.cxx

LexAVE.lo: src/scintilla/lexers/LexAVE.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAVE.lo -MD -MP -MF $(DEPDIR)/LexAVE.Tpo -c -o LexAVE.lo `test -f 'src/scintilla/lexers/LexAVE.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAVE.cxx
	$(am__mv) $(DEPDIR)/LexAVE.Tpo $(DEPDIR)/LexAVE.Plo
#	source='src/scintilla/lexers/LexAVE.cxx' object='LexAVE.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAVE.lo `test -f 'src/scintilla/lexers/LexAVE.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAVE.cxx

LexAVS.lo: src/scintilla/lexers/LexAVS.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAVS.lo -MD -MP -MF $(DEPDIR)/LexAVS.Tpo -c -o LexAVS.lo `test -f 'src/scintilla/lexers/LexAVS.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAVS.cxx
	$(am__mv) $(DEPDIR)/LexAVS.Tpo $(DEPDIR)/LexAVS.Plo
#	source='src/scintilla/lexers/LexAVS.cxx' object='LexAVS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAVS.lo `test -f 'src/scintilla/lexers/LexAVS.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAVS.cxx

LexAbaqus.lo: src/scintilla/lexers/LexAbaqus.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAbaqus.lo -MD -MP -MF $(DEPDIR)/LexAbaqus.Tpo -c -o LexAbaqus.lo `test -f 'src/scintilla/lexers/LexAbaqus.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAbaqus.cxx
	$(am__mv) $(DEPDIR)/LexAbaqus.Tpo $(DEPDIR)/LexAbaqus.Plo
#	source='src/scintilla/lexers/LexAbaqus.cxx' object='LexAbaqus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAbaqus.lo `test -f 'src/scintilla/lexers/LexAbaqus.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAbaqus.cxx

LexAda.lo: src/scintilla/lexers/LexAda.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAda.lo -MD -MP -MF $(DEPDIR)/LexAda.Tpo -c -o LexAda.lo `test -f 'src/scintilla/lexers/LexAda.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAda.cxx
	$(am__mv) $(DEPDIR)/LexAda.Tpo $(DEPDIR)/LexAda.Plo
#	source='src/scintilla/lexers/LexAda.cxx' object='LexAda.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAda.lo `test -f 'src/scintilla/lexers/LexAda.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAda.cxx

LexAsm.lo: src/scintilla/lexers/LexAsm.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAsm.lo -MD -MP -MF $(DEPDIR)/LexAsm.Tpo -c -o LexAsm.lo `test -f 'src/scintilla/lexers/LexAsm.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAsm.cxx
	$(am__mv) $(DEPDIR)/LexAsm.Tpo $(DEPDIR)/LexAsm.Plo
#	source='src/scintilla/lexers/LexAsm.cxx' object='LexAsm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAsm.lo `test -f 'src/scintilla/lexers/LexAsm.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAsm.cxx

LexAsn1.lo: src/scintilla/lexers/LexAsn1.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAsn1.lo -MD -MP -MF $(DEPDIR)/LexAsn1.Tpo -c -o LexAsn1.lo `test -f 'src/scintilla/lexers/LexAsn1.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAsn1.cxx
	$(am__mv) $(DEPDIR)/LexAsn1.Tpo $(DEPDIR)/LexAsn1.Plo
#	source='src/scintilla/lexers/LexAsn1.cxx' object='LexAsn1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAsn1.lo `test -f 'src/scintilla/lexers/LexAsn1.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexAsn1.cxx

LexBaan.lo: src/scintilla/lexers/LexBaan.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexBaan.lo -MD -MP -MF $(DEPDIR)/LexBaan.Tpo -c -o LexBaan.lo `test -f 'src/scintilla/lexers/LexBaan.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexBaan.cxx
	$(am__mv) $(DEPDIR)/LexBaan.Tpo $(DEPDIR)/LexBaan.Plo
#	source='src/scintilla/lexers/LexBaan.cxx' object='LexBaan.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexBaan.lo `test -f 'src/scintilla/lexers/LexBaan.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexBaan.cxx

LexBash.lo: src/scintilla/lexers/LexBash.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexBash.lo -MD -MP -MF $(DEPDIR)/LexBash.Tpo -c -o LexBash.lo `test -f 'src/scintilla/lexers/LexBash.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexBash.cxx
	$(am__mv) $(DEPDIR)/LexBash.Tpo $(DEPDIR)/LexBash.Plo
#	source='src/scintilla/lexers/LexBash.cxx' object='LexBash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexBash.lo `test -f 'src/scintilla/lexers/LexBash.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexBash.cxx

LexBasic.lo: src/scintilla/lexers/LexBasic.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexBasic.lo -MD -MP -MF $(DEPDIR)/LexBasic.Tpo -c -o LexBasic.lo `test -f 'src/scintilla/lexers/LexBasic.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexBasic.cxx
	$(am__mv) $(DEPDIR)/LexBasic.Tpo $(DEPDIR)/LexBasic.Plo
#	source='src/scintilla/lexers/LexBasic.cxx' object='LexBasic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexBasic.lo `test -f 'src/scintilla/lexers/LexBasic.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexBasic.cxx

LexBullant.lo: src/scintilla/lexers/LexBullant.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexBullant.lo -MD -MP -MF $(DEPDIR)/LexBullant.Tpo -c -o LexBullant.lo `test -f 'src/scintilla/lexers/LexBullant.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexBullant.cxx
	$(am__mv) $(DEPDIR)/LexBullant.Tpo $(DEPDIR)/LexBullant.Plo
#	source='src/scintilla/lexers/LexBullant.cxx' object='LexBullant.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexBullant.lo `test -f 'src/scintilla/lexers/LexBullant.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexBullant.cxx

LexCLW.lo: src/scintilla/lexers/LexCLW.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCLW.lo -MD -MP -MF $(DEPDIR)/LexCLW.Tpo -c -o LexCLW.lo `test -f 'src/scintilla/lexers/LexCLW.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCLW.cxx
	$(am__mv) $(DEPDIR)/LexCLW.Tpo $(DEPDIR)/LexCLW.Plo
#	source='src/scintilla/lexers/LexCLW.cxx' object='LexCLW.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCLW.lo `test -f 'src/scintilla/lexers/LexCLW.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCLW.cxx

LexCOBOL.lo: src/scintilla/lexers/LexCOBOL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCOBOL.lo -MD -MP -MF $(DEPDIR)/LexCOBOL.Tpo -c -o LexCOBOL.lo `test -f 'src/scintilla/lexers/LexCOBOL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCOBOL.cxx
	$(am__mv) $(DEPDIR)/LexCOBOL.Tpo $(DEPDIR)/LexCOBOL.Plo
#	source='src/scintilla/lexers/LexCOBOL.cxx' object='LexCOBOL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCOBOL.lo `test -f 'src/scintilla/lexers/LexCOBOL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCOBOL.cxx

LexCPP.lo: src/scintilla/lexers/LexCPP.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCPP.lo -MD -MP -MF $(DEPDIR)/LexCPP.Tpo -c -o LexCPP.lo `test -f 'src/scintilla/lexers/LexCPP.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCPP.cxx
	$(am__mv) $(DEPDIR)/LexCPP.Tpo $(DEPDIR)/LexCPP.Plo
#	source='src/scintilla/lexers/LexCPP.cxx' object='LexCPP.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCPP.lo `test -f 'src/scintilla/lexers/LexCPP.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCPP.cxx

LexCSS.lo: src/scintilla/lexers/LexCSS.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCSS.lo -MD -MP -MF $(DEPDIR)/LexCSS.Tpo -c -o LexCSS.lo `test -f 'src/scintilla/lexers/LexCSS.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCSS.cxx
	$(am__mv) $(DEPDIR)/LexCSS.Tpo $(DEPDIR)/LexCSS.Plo
#	source='src/scintilla/lexers/LexCSS.cxx' object='LexCSS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCSS.lo `test -f 'src/scintilla/lexers/LexCSS.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCSS.cxx

LexCaml.lo: src/scintilla/lexers/LexCaml.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCaml.lo -MD -MP -MF $(DEPDIR)/LexCaml.Tpo -c -o LexCaml.lo `test -f 'src/scintilla/lexers/LexCaml.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCaml.cxx
	$(am__mv) $(DEPDIR)/LexCaml.Tpo $(DEPDIR)/LexCaml.Plo
#	source='src/scintilla/lexers/LexCaml.cxx' object='LexCaml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCaml.lo `test -f 'src/scintilla/lexers/LexCaml.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCaml.cxx

LexCmake.lo: src/scintilla/lexers/LexCmake.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCmake.lo -MD -MP -MF $(DEPDIR)/LexCmake.Tpo -c -o LexCmake.lo `test -f 'src/scintilla/lexers/LexCmake.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCmake.cxx
	$(am__mv) $(DEPDIR)/LexCmake.Tpo $(DEPDIR)/LexCmake.Plo
#	source='src/scintilla/lexers/LexCmake.cxx' object='LexCmake.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCmake.lo `test -f 'src/scintilla/lexers/LexCmake.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCmake.cxx

LexCoffeeScript.lo: src/scintilla/lexers/LexCoffeeScript.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCoffeeScript.lo -MD -MP -MF $(DEPDIR)/LexCoffeeScript.Tpo -c -o LexCoffeeScript.lo `test -f 'src/scintilla/lexers/LexCoffeeScript.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCoffeeScript.cxx
	$(am__mv) $(DEPDIR)/LexCoffeeScript.Tpo $(DEPDIR)/LexCoffeeScript.Plo
#	source='src/scintilla/lexers/LexCoffeeScript.cxx' object='LexCoffeeScript.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCoffeeScript.lo `test -f 'src/scintilla/lexers/LexCoffeeScript.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCoffeeScript.cxx

LexConf.lo: src/scintilla/lexers/LexConf.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexConf.lo -MD -MP -MF $(DEPDIR)/LexConf.Tpo -c -o LexConf.lo `test -f 'src/scintilla/lexers/LexConf.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexConf.cxx
	$(am__mv) $(DEPDIR)/LexConf.Tpo $(DEPDIR)/LexConf.Plo
#	source='src/scintilla/lexers/LexConf.cxx' object='LexConf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexConf.lo `test -f 'src/scintilla/lexers/LexConf.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexConf.cxx

LexCrontab.lo: src/scintilla/lexers/LexCrontab.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCrontab.lo -MD -MP -MF $(DEPDIR)/LexCrontab.Tpo -c -o LexCrontab.lo `test -f 'src/scintilla/lexers/LexCrontab.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCrontab.cxx
	$(am__mv) $(DEPDIR)/LexCrontab.Tpo $(DEPDIR)/LexCrontab.Plo
#	source='src/scintilla/lexers/LexCrontab.cxx' object='LexCrontab.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCrontab.lo `test -f 'src/scintilla/lexers/LexCrontab.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCrontab.cxx

LexCsound.lo: src/scintilla/lexers/LexCsound.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCsound.lo -MD -MP -MF $(DEPDIR)/LexCsound.Tpo -c -o LexCsound.lo `test -f 'src/scintilla/lexers/LexCsound.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCsound.cxx
	$(am__mv) $(DEPDIR)/LexCsound.Tpo $(DEPDIR)/LexCsound.Plo
#	source='src/scintilla/lexers/LexCsound.cxx' object='LexCsound.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCsound.lo `test -f 'src/scintilla/lexers/LexCsound.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexCsound.cxx

LexD.lo: src/scintilla/lexers/LexD.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexD.lo -MD -MP -MF $(DEPDIR)/LexD.Tpo -c -o LexD.lo `test -f 'src/scintilla/lexers/LexD.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexD.cxx
	$(am__mv) $(DEPDIR)/LexD.Tpo $(DEPDIR)/LexD.Plo
#	source='src/scintilla/lexers/LexD.cxx' object='LexD.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexD.lo `test -f 'src/scintilla/lexers/LexD.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexD.cxx

LexECL.lo: src/scintilla/lexers/LexECL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexECL.lo -MD -MP -MF $(DEPDIR)/LexECL.Tpo -c -o LexECL.lo `test -f 'src/scintilla/lexers/LexECL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexECL.cxx
	$(am__mv) $(DEPDIR)/LexECL.Tpo $(DEPDIR)/LexECL.Plo
#	source='src/scintilla/lexers/LexECL.cxx' object='LexECL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexECL.lo `test -f 'src/scintilla/lexers/LexECL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexECL.cxx

LexEScript.lo: src/scintilla/lexers/LexEScript.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexEScript.lo -MD -MP -MF $(DEPDIR)/LexEScript.Tpo -c -o LexEScript.lo `test -f 'src/scintilla/lexers/LexEScript.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexEScript.cxx
	$(am__mv) $(DEPDIR)/LexEScript.Tpo $(DEPDIR)/LexEScript.Plo
#	source='src/scintilla/lexers/LexEScript.cxx' object='LexEScript.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexEScript.lo `test -f 'src/scintilla/lexers/LexEScript.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexEScript.cxx

LexEiffel.lo: src/scintilla/lexers/LexEiffel.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexEiffel.lo -MD -MP -MF $(DEPDIR)/LexEiffel.Tpo -c -o LexEiffel.lo `test -f 'src/scintilla/lexers/LexEiffel.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexEiffel.cxx
	$(am__mv) $(DEPDIR)/LexEiffel.Tpo $(DEPDIR)/LexEiffel.Plo
#	source='src/scintilla/lexers/LexEiffel.cxx' object='LexEiffel.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexEiffel.lo `test -f 'src/scintilla/lexers/LexEiffel.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexEiffel.cxx

LexErlang.lo: src/scintilla/lexers/LexErlang.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexErlang.lo -MD -MP -MF $(DEPDIR)/LexErlang.Tpo -c -o LexErlang.lo `test -f 'src/scintilla/lexers/LexErlang.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexErlang.cxx
	$(am__mv) $(DEPDIR)/LexErlang.Tpo $(DEPDIR)/LexErlang.Plo
#	source='src/scintilla/lexers/LexErlang.cxx' object='LexErlang.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexErlang.lo `test -f 'src/scintilla/lexers/LexErlang.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexErlang.cxx

LexFlagship.lo: src/scintilla/lexers/LexFlagship.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexFlagship.lo -MD -MP -MF $(DEPDIR)/LexFlagship.Tpo -c -o LexFlagship.lo `test -f 'src/scintilla/lexers/LexFlagship.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexFlagship.cxx
	$(am__mv) $(DEPDIR)/LexFlagship.Tpo $(DEPDIR)/LexFlagship.Plo
#	source='src/scintilla/lexers/LexFlagship.cxx' object='LexFlagship.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexFlagship.lo `test -f 'src/scintilla/lexers/LexFlagship.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexFlagship.cxx

LexForth.lo: src/scintilla/lexers/LexForth.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexForth.lo -MD -MP -MF $(DEPDIR)/LexForth.Tpo -c -o LexForth.lo `test -f 'src/scintilla/lexers/LexForth.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexForth.cxx
	$(am__mv) $(DEPDIR)/LexForth.Tpo $(DEPDIR)/LexForth.Plo
#	source='src/scintilla/lexers/LexForth.cxx' object='LexForth.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexForth.lo `test -f 'src/scintilla/lexers/LexForth.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexForth.cxx

LexFortran.lo: src/scintilla/lexers/LexFortran.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexFortran.lo -MD -MP -MF $(DEPDIR)/LexFortran.Tpo -c -o LexFortran.lo `test -f 'src/scintilla/lexers/LexFortran.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexFortran.cxx
	$(am__mv) $(DEPDIR)/LexFortran.Tpo $(DEPDIR)/LexFortran.Plo
#	source='src/scintilla/lexers/LexFortran.cxx' object='LexFortran.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexFortran.lo `test -f 'src/scintilla/lexers/LexFortran.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexFortran.cxx

LexGAP.lo: src/scintilla/lexers/LexGAP.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexGAP.lo -MD -MP -MF $(DEPDIR)/LexGAP.Tpo -c -o LexGAP.lo `test -f 'src/scintilla/lexers/LexGAP.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexGAP.cxx
	$(am__mv) $(DEPDIR)/LexGAP.Tpo $(DEPDIR)/LexGAP.Plo
#	source='src/scintilla/lexers/LexGAP.cxx' object='LexGAP.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexGAP.lo `test -f 'src/scintilla/lexers/LexGAP.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexGAP.cxx

LexGui4Cli.lo: src/scintilla/lexers/LexGui4Cli.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexGui4Cli.lo -MD -MP -MF $(DEPDIR)/LexGui4Cli.Tpo -c -o LexGui4Cli.lo `test -f 'src/scintilla/lexers/LexGui4Cli.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexGui4Cli.cxx
	$(am__mv) $(DEPDIR)/LexGui4Cli.Tpo $(DEPDIR)/LexGui4Cli.Plo
#	source='src/scintilla/lexers/LexGui4Cli.cxx' object='LexGui4Cli.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexGui4Cli.lo `test -f 'src/scintilla/lexers/LexGui4Cli.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexGui4Cli.cxx

LexHTML.lo: src/scintilla/lexers/LexHTML.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexHTML.lo -MD -MP -MF $(DEPDIR)/LexHTML.Tpo -c -o LexHTML.lo `test -f 'src/scintilla/lexers/LexHTML.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexHTML.cxx
	$(am__mv) $(DEPDIR)/LexHTML.Tpo $(DEPDIR)/LexHTML.Plo
#	source='src/scintilla/lexers/LexHTML.cxx' object='LexHTML.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexHTML.lo `test -f 'src/scintilla/lexers/LexHTML.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexHTML.cxx

LexHaskell.lo: src/scintilla/lexers/LexHaskell.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexHaskell.lo -MD -MP -MF $(DEPDIR)/LexHaskell.Tpo -c -o LexHaskell.lo `test -f 'src/scintilla/lexers/LexHaskell.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexHaskell.cxx
	$(am__mv) $(DEPDIR)/LexHaskell.Tpo $(DEPDIR)/LexHaskell.Plo
#	source='src/scintilla/lexers/LexHaskell.cxx' object='LexHaskell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexHaskell.lo `test -f 'src/scintilla/lexers/LexHaskell.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexHaskell.cxx

LexInno.lo: src/scintilla/lexers/LexInno.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexInno.lo -MD -MP -MF $(DEPDIR)/LexInno.Tpo -c -o LexInno.lo `test -f 'src/scintilla/lexers/LexInno.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexInno.cxx
	$(am__mv) $(DEPDIR)/LexInno.Tpo $(DEPDIR)/LexInno.Plo
#	source='src/scintilla/lexers/LexInno.cxx' object='LexInno.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexInno.lo `test -f 'src/scintilla/lexers/LexInno.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexInno.cxx

LexKix.lo: src/scintilla/lexers/LexKix.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexKix.lo -MD -MP -MF $(DEPDIR)/LexKix.Tpo -c -o LexKix.lo `test -f 'src/scintilla/lexers/LexKix.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexKix.cxx
	$(am__mv) $(DEPDIR)/LexKix.Tpo $(DEPDIR)/LexKix.Plo
#	source='src/scintilla/lexers/LexKix.cxx' object='LexKix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexKix.lo `test -f 'src/scintilla/lexers/LexKix.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexKix.cxx

LexKVIrc.lo: src/scintilla/lexers/LexKVIrc.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexKVIrc.lo -MD -MP -MF $(DEPDIR)/LexKVIrc.Tpo -c -o LexKVIrc.lo `test -f 'src/scintilla/lexers/LexKVIrc.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexKVIrc.cxx
	$(am__mv) $(DEPDIR)/LexKVIrc.Tpo $(DEPDIR)/LexKVIrc.Plo
#	source='src/scintilla/lexers/LexKVIrc.cxx' object='LexKVIrc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexKVIrc.lo `test -f 'src/scintilla/lexers/LexKVIrc.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexKVIrc.cxx

LexLaTeX.lo: src/scintilla/lexers/LexLaTeX.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLaTeX.lo -MD -MP -MF $(DEPDIR)/LexLaTeX.Tpo -c -o LexLaTeX.lo `test -f 'src/scintilla/lexers/LexLaTeX.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexLaTeX.cxx
	$(am__mv) $(DEPDIR)/LexLaTeX.Tpo $(DEPDIR)/LexLaTeX.Plo
#	source='src/scintilla/lexers/LexLaTeX.cxx' object='LexLaTeX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLaTeX.lo `test -f 'src/scintilla/lexers/LexLaTeX.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexLaTeX.cxx

LexLisp.lo: src/scintilla/lexers/LexLisp.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLisp.lo -MD -MP -MF $(DEPDIR)/LexLisp.Tpo -c -o LexLisp.lo `test -f 'src/scintilla/lexers/LexLisp.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexLisp.cxx
	$(am__mv) $(DEPDIR)/LexLisp.Tpo $(DEPDIR)/LexLisp.Plo
#	source='src/scintilla/lexers/LexLisp.cxx' object='LexLisp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLisp.lo `test -f 'src/scintilla/lexers/LexLisp.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexLisp.cxx

LexLout.lo: src/scintilla/lexers/LexLout.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLout.lo -MD -MP -MF $(DEPDIR)/LexLout.Tpo -c -o LexLout.lo `test -f 'src/scintilla/lexers/LexLout.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexLout.cxx
	$(am__mv) $(DEPDIR)/LexLout.Tpo $(DEPDIR)/LexLout.Plo
#	source='src/scintilla/lexers/LexLout.cxx' object='LexLout.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLout.lo `test -f 'src/scintilla/lexers/LexLout.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexLout.cxx

LexLua.lo: src/scintilla/lexers/LexLua.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLua.lo -MD -MP -MF $(DEPDIR)/LexLua.Tpo -c -o LexLua.lo `test -f 'src/scintilla/lexers/LexLua.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexLua.cxx
	$(am__mv) $(DEPDIR)/LexLua.Tpo $(DEPDIR)/LexLua.Plo
#	source='src/scintilla/lexers/LexLua.cxx' object='LexLua.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLua.lo `test -f 'src/scintilla/lexers/LexLua.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexLua.cxx

LexMMIXAL.lo: src/scintilla/lexers/LexMMIXAL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMMIXAL.lo -MD -MP -MF $(DEPDIR)/LexMMIXAL.Tpo -c -o LexMMIXAL.lo `test -f 'src/scintilla/lexers/LexMMIXAL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMMIXAL.cxx
	$(am__mv) $(DEPDIR)/LexMMIXAL.Tpo $(DEPDIR)/LexMMIXAL.Plo
#	source='src/scintilla/lexers/LexMMIXAL.cxx' object='LexMMIXAL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMMIXAL.lo `test -f 'src/scintilla/lexers/LexMMIXAL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMMIXAL.cxx

LexMPT.lo: src/scintilla/lexers/LexMPT.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMPT.lo -MD -MP -MF $(DEPDIR)/LexMPT.Tpo -c -o LexMPT.lo `test -f 'src/scintilla/lexers/LexMPT.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMPT.cxx
	$(am__mv) $(DEPDIR)/LexMPT.Tpo $(DEPDIR)/LexMPT.Plo
#	source='src/scintilla/lexers/LexMPT.cxx' object='LexMPT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMPT.lo `test -f 'src/scintilla/lexers/LexMPT.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMPT.cxx

LexMSSQL.lo: src/scintilla/lexers/LexMSSQL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMSSQL.lo -MD -MP -MF $(DEPDIR)/LexMSSQL.Tpo -c -o LexMSSQL.lo `test -f 'src/scintilla/lexers/LexMSSQL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMSSQL.cxx
	$(am__mv) $(DEPDIR)/LexMSSQL.Tpo $(DEPDIR)/LexMSSQL.Plo
#	source='src/scintilla/lexers/LexMSSQL.cxx' object='LexMSSQL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMSSQL.lo `test -f 'src/scintilla/lexers/LexMSSQL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMSSQL.cxx

LexMagik.lo: src/scintilla/lexers/LexMagik.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMagik.lo -MD -MP -MF $(DEPDIR)/LexMagik.Tpo -c -o LexMagik.lo `test -f 'src/scintilla/lexers/LexMagik.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMagik.cxx
	$(am__mv) $(DEPDIR)/LexMagik.Tpo $(DEPDIR)/LexMagik.Plo
#	source='src/scintilla/lexers/LexMagik.cxx' object='LexMagik.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMagik.lo `test -f 'src/scintilla/lexers/LexMagik.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMagik.cxx

LexMarkdown.lo: src/scintilla/lexers/LexMarkdown.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMarkdown.lo -MD -MP -MF $(DEPDIR)/LexMarkdown.Tpo -c -o LexMarkdown.lo `test -f 'src/scintilla/lexers/LexMarkdown.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMarkdown.cxx
	$(am__mv) $(DEPDIR)/LexMarkdown.Tpo $(DEPDIR)/LexMarkdown.Plo
#	source='src/scintilla/lexers/LexMarkdown.cxx' object='LexMarkdown.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMarkdown.lo `test -f 'src/scintilla/lexers/LexMarkdown.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMarkdown.cxx

LexMatlab.lo: src/scintilla/lexers/LexMatlab.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMatlab.lo -MD -MP -MF $(DEPDIR)/LexMatlab.Tpo -c -o LexMatlab.lo `test -f 'src/scintilla/lexers/LexMatlab.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMatlab.cxx
	$(am__mv) $(DEPDIR)/LexMatlab.Tpo $(DEPDIR)/LexMatlab.Plo
#	source='src/scintilla/lexers/LexMatlab.cxx' object='LexMatlab.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMatlab.lo `test -f 'src/scintilla/lexers/LexMatlab.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMatlab.cxx

LexMetapost.lo: src/scintilla/lexers/LexMetapost.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMetapost.lo -MD -MP -MF $(DEPDIR)/LexMetapost.Tpo -c -o LexMetapost.lo `test -f 'src/scintilla/lexers/LexMetapost.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMetapost.cxx
	$(am__mv) $(DEPDIR)/LexMetapost.Tpo $(DEPDIR)/LexMetapost.Plo
#	source='src/scintilla/lexers/LexMetapost.cxx' object='LexMetapost.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMetapost.lo `test -f 'src/scintilla/lexers/LexMetapost.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMetapost.cxx

LexModula.lo: src/scintilla/lexers/LexModula.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexModula.lo -MD -MP -MF $(DEPDIR)/LexModula.Tpo -c -o LexModula.lo `test -f 'src/scintilla/lexers/LexModula.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexModula.cxx
	$(am__mv) $(DEPDIR)/LexModula.Tpo $(DEPDIR)/LexModula.Plo
#	source='src/scintilla/lexers/LexModula.cxx' object='LexModula.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexModula.lo `test -f 'src/scintilla/lexers/LexModula.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexModula.cxx

LexMySQL.lo: src/scintilla/lexers/LexMySQL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMySQL.lo -MD -MP -MF $(DEPDIR)/LexMySQL.Tpo -c -o LexMySQL.lo `test -f 'src/scintilla/lexers/LexMySQL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMySQL.cxx
	$(am__mv) $(DEPDIR)/LexMySQL.Tpo $(DEPDIR)/LexMySQL.Plo
#	source='src/scintilla/lexers/LexMySQL.cxx' object='LexMySQL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMySQL.lo `test -f 'src/scintilla/lexers/LexMySQL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexMySQL.cxx

LexNimrod.lo: src/scintilla/lexers/LexNimrod.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexNimrod.lo -MD -MP -MF $(DEPDIR)/LexNimrod.Tpo -c -o LexNimrod.lo `test -f 'src/scintilla/lexers/LexNimrod.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexNimrod.cxx
	$(am__mv) $(DEPDIR)/LexNimrod.Tpo $(DEPDIR)/LexNimrod.Plo
#	source='src/scintilla/lexers/LexNimrod.cxx' object='LexNimrod.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexNimrod.lo `test -f 'src/scintilla/lexers/LexNimrod.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexNimrod.cxx

LexNsis.lo: src/scintilla/lexers/LexNsis.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexNsis.lo -MD -MP -MF $(DEPDIR)/LexNsis.Tpo -c -o LexNsis.lo `test -f 'src/scintilla/lexers/LexNsis.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexNsis.cxx
	$(am__mv) $(DEPDIR)/LexNsis.Tpo $(DEPDIR)/LexNsis.Plo
#	source='src/scintilla/lexers/LexNsis.cxx' object='LexNsis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexNsis.lo `test -f 'src/scintilla/lexers/LexNsis.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexNsis.cxx

LexOScript.lo: src/scintilla/lexers/LexOScript.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexOScript.lo -MD -MP -MF $(DEPDIR)/LexOScript.Tpo -c -o LexOScript.lo `test -f 'src/scintilla/lexers/LexOScript.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexOScript.cxx
	$(am__mv) $(DEPDIR)/LexOScript.Tpo $(DEPDIR)/LexOScript.Plo
#	source='src/scintilla/lexers/LexOScript.cxx' object='LexOScript.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexOScript.lo `test -f 'src/scintilla/lexers/LexOScript.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexOScript.cxx

LexOpal.lo: src/scintilla/lexers/LexOpal.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexOpal.lo -MD -MP -MF $(DEPDIR)/LexOpal.Tpo -c -o LexOpal.lo `test -f 'src/scintilla/lexers/LexOpal.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexOpal.cxx
	$(am__mv) $(DEPDIR)/LexOpal.Tpo $(DEPDIR)/LexOpal.Plo
#	source='src/scintilla/lexers/LexOpal.cxx' object='LexOpal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexOpal.lo `test -f 'src/scintilla/lexers/LexOpal.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexOpal.cxx

LexOthers.lo: src/scintilla/lexers/LexOthers.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexOthers.lo -MD -MP -MF $(DEPDIR)/LexOthers.Tpo -c -o LexOthers.lo `test -f 'src/scintilla/lexers/LexOthers.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexOthers.cxx
	$(am__mv) $(DEPDIR)/LexOthers.Tpo $(DEPDIR)/LexOthers.Plo
#	source='src/scintilla/lexers/LexOthers.cxx' object='LexOthers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexOthers.lo `test -f 'src/scintilla/lexers/LexOthers.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexOthers.cxx

LexPB.lo: src/scintilla/lexers/LexPB.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPB.lo -MD -MP -MF $(DEPDIR)/LexPB.Tpo -c -o LexPB.lo `test -f 'src/scintilla/lexers/LexPB.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPB.cxx
	$(am__mv) $(DEPDIR)/LexPB.Tpo $(DEPDIR)/LexPB.Plo
#	source='src/scintilla/lexers/LexPB.cxx' object='LexPB.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPB.lo `test -f 'src/scintilla/lexers/LexPB.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPB.cxx

LexPLM.lo: src/scintilla/lexers/LexPLM.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPLM.lo -MD -MP -MF $(DEPDIR)/LexPLM.Tpo -c -o LexPLM.lo `test -f 'src/scintilla/lexers/LexPLM.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPLM.cxx
	$(am__mv) $(DEPDIR)/LexPLM.Tpo $(DEPDIR)/LexPLM.Plo
#	source='src/scintilla/lexers/LexPLM.cxx' object='LexPLM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPLM.lo `test -f 'src/scintilla/lexers/LexPLM.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPLM.cxx

LexPO.lo: src/scintilla/lexers/LexPO.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPO.lo -MD -MP -MF $(DEPDIR)/LexPO.Tpo -c -o LexPO.lo `test -f 'src/scintilla/lexers/LexPO.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPO.cxx
	$(am__mv) $(DEPDIR)/LexPO.Tpo $(DEPDIR)/LexPO.Plo
#	source='src/scintilla/lexers/LexPO.cxx' object='LexPO.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPO.lo `test -f 'src/scintilla/lexers/LexPO.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPO.cxx

LexPOV.lo: src/scintilla/lexers/LexPOV.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPOV.lo -MD -MP -MF $(DEPDIR)/LexPOV.Tpo -c -o LexPOV.lo `test -f 'src/scintilla/lexers/LexPOV.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPOV.cxx
	$(am__mv) $(DEPDIR)/LexPOV.Tpo $(DEPDIR)/LexPOV.Plo
#	source='src/scintilla/lexers/LexPOV.cxx' object='LexPOV.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPOV.lo `test -f 'src/scintilla/lexers/LexPOV.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPOV.cxx

LexPS.lo: src/scintilla/lexers/LexPS.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPS.lo -MD -MP -MF $(DEPDIR)/LexPS.Tpo -c -o LexPS.lo `test -f 'src/scintilla/lexers/LexPS.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPS.cxx
	$(am__mv) $(DEPDIR)/LexPS.Tpo $(DEPDIR)/LexPS.Plo
#	source='src/scintilla/lexers/LexPS.cxx' object='LexPS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPS.lo `test -f 'src/scintilla/lexers/LexPS.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPS.cxx

LexPascal.lo: src/scintilla/lexers/LexPascal.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPascal.lo -MD -MP -MF $(DEPDIR)/LexPascal.Tpo -c -o LexPascal.lo `test -f 'src/scintilla/lexers/LexPascal.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPascal.cxx
	$(am__mv) $(DEPDIR)/LexPascal.Tpo $(DEPDIR)/LexPascal.Plo
#	source='src/scintilla/lexers/LexPascal.cxx' object='LexPascal.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPascal.lo `test -f 'src/scintilla/lexers/LexPascal.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPascal.cxx

LexPerl.lo: src/scintilla/lexers/LexPerl.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPerl.lo -MD -MP -MF $(DEPDIR)/LexPerl.Tpo -c -o LexPerl.lo `test -f 'src/scintilla/lexers/LexPerl.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPerl.cxx
	$(am__mv) $(DEPDIR)/LexPerl.Tpo $(DEPDIR)/LexPerl.Plo
#	source='src/scintilla/lexers/LexPerl.cxx' object='LexPerl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPerl.lo `test -f 'src/scintilla/lexers/LexPerl.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPerl.cxx

LexPowerPro.lo: src/scintilla/lexers/LexPowerPro.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPowerPro.lo -MD -MP -MF $(DEPDIR)/LexPowerPro.Tpo -c -o LexPowerPro.lo `test -f 'src/scintilla/lexers/LexPowerPro.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPowerPro.cxx
	$(am__mv) $(DEPDIR)/LexPowerPro.Tpo $(DEPDIR)/LexPowerPro.Plo
#	source='src/scintilla/lexers/LexPowerPro.cxx' object='LexPowerPro.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPowerPro.lo `test -f 'src/scintilla/lexers/LexPowerPro.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPowerPro.cxx

LexPowerShell.lo: src/scintilla/lexers/LexPowerShell.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPowerShell.lo -MD -MP -MF $(DEPDIR)/LexPowerShell.Tpo -c -o LexPowerShell.lo `test -f 'src/scintilla/lexers/LexPowerShell.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPowerShell.cxx
	$(am__mv) $(DEPDIR)/LexPowerShell.Tpo $(DEPDIR)/LexPowerShell.Plo
#	source='src/scintilla/lexers/LexPowerShell.cxx' object='LexPowerShell.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPowerShell.lo `test -f 'src/scintilla/lexers/LexPowerShell.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPowerShell.cxx

LexProgress.lo: src/scintilla/lexers/LexProgress.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexProgress.lo -MD -MP -MF $(DEPDIR)/LexProgress.Tpo -c -o LexProgress.lo `test -f 'src/scintilla/lexers/LexProgress.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexProgress.cxx
	$(am__mv) $(DEPDIR)/LexProgress.Tpo $(DEPDIR)/LexProgress.Plo
#	source='src/scintilla/lexers/LexProgress.cxx' object='LexProgress.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexProgress.lo `test -f 'src/scintilla/lexers/LexProgress.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexProgress.cxx

LexPython.lo: src/scintilla/lexers/LexPython.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPython.lo -MD -MP -MF $(DEPDIR)/LexPython.Tpo -c -o LexPython.lo `test -f 'src/scintilla/lexers/LexPython.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPython.cxx
	$(am__mv) $(DEPDIR)/LexPython.Tpo $(DEPDIR)/LexPython.Plo
#	source='src/scintilla/lexers/LexPython.cxx' object='LexPython.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPython.lo `test -f 'src/scintilla/lexers/LexPython.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexPython.cxx

LexR.lo: src/scintilla/lexers/LexR.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexR.lo -MD -MP -MF $(DEPDIR)/LexR.Tpo -c -o LexR.lo `test -f 'src/scintilla/lexers/LexR.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexR.cxx
	$(am__mv) $(DEPDIR)/LexR.Tpo $(DEPDIR)/LexR.Plo
#	source='src/scintilla/lexers/LexR.cxx' object='LexR.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexR.lo `test -f 'src/scintilla/lexers/LexR.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexR.cxx

LexRebol.lo: src/scintilla/lexers/LexRebol.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexRebol.lo -MD -MP -MF $(DEPDIR)/LexRebol.Tpo -c -o LexRebol.lo `test -f 'src/scintilla/lexers/LexRebol.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexRebol.cxx
	$(am__mv) $(DEPDIR)/LexRebol.Tpo $(DEPDIR)/LexRebol.Plo
#	source='src/scintilla/lexers/LexRebol.cxx' object='LexRebol.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexRebol.lo `test -f 'src/scintilla/lexers/LexRebol.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexRebol.cxx

LexRuby.lo: src/scintilla/lexers/LexRuby.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexRuby.lo -MD -MP -MF $(DEPDIR)/LexRuby.Tpo -c -o LexRuby.lo `test -f 'src/scintilla/lexers/LexRuby.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexRuby.cxx
	$(am__mv) $(DEPDIR)/LexRuby.Tpo $(DEPDIR)/LexRuby.Plo
#	source='src/scintilla/lexers/LexRuby.cxx' object='LexRuby.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexRuby.lo `test -f 'src/scintilla/lexers/LexRuby.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexRuby.cxx

LexSML.lo: src/scintilla/lexers/LexSML.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexSML.lo -MD -MP -MF $(DEPDIR)/LexSML.Tpo -c -o LexSML.lo `test -f 'src/scintilla/lexers/LexSML.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSML.cxx
	$(am__mv) $(DEPDIR)/LexSML.Tpo $(DEPDIR)/LexSML.Plo
#	source='src/scintilla/lexers/LexSML.cxx' object='LexSML.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexSML.lo `test -f 'src/scintilla/lexers/LexSML.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSML.cxx

LexSQL.lo: src/scintilla/lexers/LexSQL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexSQL.lo -MD -MP -MF $(DEPDIR)/LexSQL.Tpo -c -o LexSQL.lo `test -f 'src/scintilla/lexers/LexSQL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSQL.cxx
	$(am__mv) $(DEPDIR)/LexSQL.Tpo $(DEPDIR)/LexSQL.Plo
#	source='src/scintilla/lexers/LexSQL.cxx' object='LexSQL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexSQL.lo `test -f 'src/scintilla/lexers/LexSQL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSQL.cxx

LexScriptol.lo: src/scintilla/lexers/LexScriptol.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexScriptol.lo -MD -MP -MF $(DEPDIR)/LexScriptol.Tpo -c -o LexScriptol.lo `test -f 'src/scintilla/lexers/LexScriptol.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexScriptol.cxx
	$(am__mv) $(DEPDIR)/LexScriptol.Tpo $(DEPDIR)/LexScriptol.Plo
#	source='src/scintilla/lexers/LexScriptol.cxx' object='LexScriptol.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexScriptol.lo `test -f 'src/scintilla/lexers/LexScriptol.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexScriptol.cxx

LexSmalltalk.lo: src/scintilla/lexers/LexSmalltalk.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexSmalltalk.lo -MD -MP -MF $(DEPDIR)/LexSmalltalk.Tpo -c -o LexSmalltalk.lo `test -f 'src/scintilla/lexers/LexSmalltalk.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSmalltalk.cxx
	$(am__mv) $(DEPDIR)/LexSmalltalk.Tpo $(DEPDIR)/LexSmalltalk.Plo
#	source='src/scintilla/lexers/LexSmalltalk.cxx' object='LexSmalltalk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexSmalltalk.lo `test -f 'src/scintilla/lexers/LexSmalltalk.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSmalltalk.cxx

LexSorcus.lo: src/scintilla/lexers/LexSorcus.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexSorcus.lo -MD -MP -MF $(DEPDIR)/LexSorcus.Tpo -c -o LexSorcus.lo `test -f 'src/scintilla/lexers/LexSorcus.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSorcus.cxx
	$(am__mv) $(DEPDIR)/LexSorcus.Tpo $(DEPDIR)/LexSorcus.Plo
#	source='src/scintilla/lexers/LexSorcus.cxx' object='LexSorcus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexSorcus.lo `test -f 'src/scintilla/lexers/LexSorcus.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSorcus.cxx

LexSpecman.lo: src/scintilla/lexers/LexSpecman.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexSpecman.lo -MD -MP -MF $(DEPDIR)/LexSpecman.Tpo -c -o LexSpecman.lo `test -f 'src/scintilla/lexers/LexSpecman.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSpecman.cxx
	$(am__mv) $(DEPDIR)/LexSpecman.Tpo $(DEPDIR)/LexSpecman.Plo
#	source='src/scintilla/lexers/LexSpecman.cxx' object='LexSpecman.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexSpecman.lo `test -f 'src/scintilla/lexers/LexSpecman.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSpecman.cxx

LexSpice.lo: src/scintilla/lexers/LexSpice.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexSpice.lo -MD -MP -MF $(DEPDIR)/LexSpice.Tpo -c -o LexSpice.lo `test -f 'src/scintilla/lexers/LexSpice.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSpice.cxx
	$(am__mv) $(DEPDIR)/LexSpice.Tpo $(DEPDIR)/LexSpice.Plo
#	source='src/scintilla/lexers/LexSpice.cxx' object='LexSpice.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexSpice.lo `test -f 'src/scintilla/lexers/LexSpice.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSpice.cxx

LexSTTXT.lo: src/scintilla/lexers/LexSTTXT.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexSTTXT.lo -MD -MP -MF $(DEPDIR)/LexSTTXT.Tpo -c -o LexSTTXT.lo `test -f 'src/scintilla/lexers/LexSTTXT.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSTTXT.cxx
	$(am__mv) $(DEPDIR)/LexSTTXT.Tpo $(DEPDIR)/LexSTTXT.Plo
#	source='src/scintilla/lexers/LexSTTXT.cxx' object='LexSTTXT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexSTTXT.lo `test -f 'src/scintilla/lexers/LexSTTXT.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexSTTXT.cxx

LexTACL.lo: src/scintilla/lexers/LexTACL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexTACL.lo -MD -MP -MF $(DEPDIR)/LexTACL.Tpo -c -o LexTACL.lo `test -f 'src/scintilla/lexers/LexTACL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTACL.cxx
	$(am__mv) $(DEPDIR)/LexTACL.Tpo $(DEPDIR)/LexTACL.Plo
#	source='src/scintilla/lexers/LexTACL.cxx' object='LexTACL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexTACL.lo `test -f 'src/scintilla/lexers/LexTACL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTACL.cxx

LexTADS3.lo: src/scintilla/lexers/LexTADS3.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexTADS3.lo -MD -MP -MF $(DEPDIR)/LexTADS3.Tpo -c -o LexTADS3.lo `test -f 'src/scintilla/lexers/LexTADS3.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTADS3.cxx
	$(am__mv) $(DEPDIR)/LexTADS3.Tpo $(DEPDIR)/LexTADS3.Plo
#	source='src/scintilla/lexers/LexTADS3.cxx' object='LexTADS3.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexTADS3.lo `test -f 'src/scintilla/lexers/LexTADS3.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTADS3.cxx

LexTAL.lo: src/scintilla/lexers/LexTAL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexTAL.lo -MD -MP -MF $(DEPDIR)/LexTAL.Tpo -c -o LexTAL.lo `test -f 'src/scintilla/lexers/LexTAL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTAL.cxx
	$(am__mv) $(DEPDIR)/LexTAL.Tpo $(DEPDIR)/LexTAL.Plo
#	source='src/scintilla/lexers/LexTAL.cxx' object='LexTAL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexTAL.lo `test -f 'src/scintilla/lexers/LexTAL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTAL.cxx

LexTCL.lo: src/scintilla/lexers/LexTCL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexTCL.lo -MD -MP -MF $(DEPDIR)/LexTCL.Tpo -c -o LexTCL.lo `test -f 'src/scintilla/lexers/LexTCL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTCL.cxx
	$(am__mv) $(DEPDIR)/LexTCL.Tpo $(DEPDIR)/LexTCL.Plo
#	source='src/scintilla/lexers/LexTCL.cxx' object='LexTCL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexTCL.lo `test -f 'src/scintilla/lexers/LexTCL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTCL.cxx

LexTCMD.lo: src/scintilla/lexers/LexTCMD.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexTCMD.lo -MD -MP -MF $(DEPDIR)/LexTCMD.Tpo -c -o LexTCMD.lo `test -f 'src/scintilla/lexers/LexTCMD.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTCMD.cxx
	$(am__mv) $(DEPDIR)/LexTCMD.Tpo $(DEPDIR)/LexTCMD.Plo
#	source='src/scintilla/lexers/LexTCMD.cxx' object='LexTCMD.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexTCMD.lo `test -f 'src/scintilla/lexers/LexTCMD.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTCMD.cxx

LexTeX.lo: src/scintilla/lexers/LexTeX.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexTeX.lo -MD -MP -MF $(DEPDIR)/LexTeX.Tpo -c -o LexTeX.lo `test -f 'src/scintilla/lexers/LexTeX.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTeX.cxx
	$(am__mv) $(DEPDIR)/LexTeX.Tpo $(DEPDIR)/LexTeX.Plo
#	source='src/scintilla/lexers/LexTeX.cxx' object='LexTeX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexTeX.lo `test -f 'src/scintilla/lexers/LexTeX.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTeX.cxx

LexTxt2tags.lo: src/scintilla/lexers/LexTxt2tags.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexTxt2tags.lo -MD -MP -MF $(DEPDIR)/LexTxt2tags.Tpo -c -o LexTxt2tags.lo `test -f 'src/scintilla/lexers/LexTxt2tags.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTxt2tags.cxx
	$(am__mv) $(DEPDIR)/LexTxt2tags.Tpo $(DEPDIR)/LexTxt2tags.Plo
#	source='src/scintilla/lexers/LexTxt2tags.cxx' object='LexTxt2tags.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexTxt2tags.lo `test -f 'src/scintilla/lexers/LexTxt2tags.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexTxt2tags.cxx

LexVB.lo: src/scintilla/lexers/LexVB.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexVB.lo -MD -MP -MF $(DEPDIR)/LexVB.Tpo -c -o LexVB.lo `test -f 'src/scintilla/lexers/LexVB.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexVB.cxx
	$(am__mv) $(DEPDIR)/LexVB.Tpo $(DEPDIR)/LexVB.Plo
#	source='src/scintilla/lexers/LexVB.cxx' object='LexVB.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexVB.lo `test -f 'src/scintilla/lexers/LexVB.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexVB.cxx

LexVHDL.lo: src/scintilla/lexers/LexVHDL.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexVHDL.lo -MD -MP -MF $(DEPDIR)/LexVHDL.Tpo -c -o LexVHDL.lo `test -f 'src/scintilla/lexers/LexVHDL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexVHDL.cxx
	$(am__mv) $(DEPDIR)/LexVHDL.Tpo $(DEPDIR)/LexVHDL.Plo
#	source='src/scintilla/lexers/LexVHDL.cxx' object='LexVHDL.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexVHDL.lo `test -f 'src/scintilla/lexers/LexVHDL.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexVHDL.cxx

LexVerilog.lo: src/scintilla/lexers/LexVerilog.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexVerilog.lo -MD -MP -MF $(DEPDIR)/LexVerilog.Tpo -c -o LexVerilog.lo `test -f 'src/scintilla/lexers/LexVerilog.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexVerilog.cxx
	$(am__mv) $(DEPDIR)/LexVerilog.Tpo $(DEPDIR)/LexVerilog.Plo
#	source='src/scintilla/lexers/LexVerilog.cxx' object='LexVerilog.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexVerilog.lo `test -f 'src/scintilla/lexers/LexVerilog.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexVerilog.cxx

LexVisualProlog.lo: src/scintilla/lexers/LexVisualProlog.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexVisualProlog.lo -MD -MP -MF $(DEPDIR)/LexVisualProlog.Tpo -c -o LexVisualProlog.lo `test -f 'src/scintilla/lexers/LexVisualProlog.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexVisualProlog.cxx
	$(am__mv) $(DEPDIR)/LexVisualProlog.Tpo $(DEPDIR)/LexVisualProlog.Plo
#	source='src/scintilla/lexers/LexVisualProlog.cxx' object='LexVisualProlog.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexVisualProlog.lo `test -f 'src/scintilla/lexers/LexVisualProlog.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexVisualProlog.cxx

LexYAML.lo: src/scintilla/lexers/LexYAML.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexYAML.lo -MD -MP -MF $(DEPDIR)/LexYAML.Tpo -c -o LexYAML.lo `test -f 'src/scintilla/lexers/LexYAML.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexYAML.cxx
	$(am__mv) $(DEPDIR)/LexYAML.Tpo $(DEPDIR)/LexYAML.Plo
#	source='src/scintilla/lexers/LexYAML.cxx' object='LexYAML.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexYAML.lo `test -f 'src/scintilla/lexers/LexYAML.cxx' || echo '$(srcdir)/'`src/scintilla/lexers/LexYAML.cxx

Accessor.lo: src/scintilla/lexlib/Accessor.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Accessor.lo -MD -MP -MF $(DEPDIR)/Accessor.Tpo -c -o Accessor.lo `test -f 'src/scintilla/lexlib/Accessor.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/Accessor.cxx
	$(am__mv) $(DEPDIR)/Accessor.Tpo $(DEPDIR)/Accessor.Plo
#	source='src/scintilla/lexlib/Accessor.cxx' object='Accessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Accessor.lo `test -f 'src/scintilla/lexlib/Accessor.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/Accessor.cxx

CharacterCategory.lo: src/scintilla/lexlib/CharacterCategory.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CharacterCategory.lo -MD -MP -MF $(DEPDIR)/CharacterCategory.Tpo -c -o CharacterCategory.lo `test -f 'src/scintilla/lexlib/CharacterCategory.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/CharacterCategory.cxx
	$(am__mv) $(DEPDIR)/CharacterCategory.Tpo $(DEPDIR)/CharacterCategory.Plo
#	source='src/scintilla/lexlib/CharacterCategory.cxx' object='CharacterCategory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CharacterCategory.lo `test -f 'src/scintilla/lexlib/CharacterCategory.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/CharacterCategory.cxx

CharacterSet.lo: src/scintilla/lexlib/CharacterSet.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CharacterSet.lo -MD -MP -MF $(DEPDIR)/CharacterSet.Tpo -c -o CharacterSet.lo `test -f 'src/scintilla/lexlib/CharacterSet.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/CharacterSet.cxx
	$(am__mv) $(DEPDIR)/CharacterSet.Tpo $(DEPDIR)/CharacterSet.Plo
#	source='src/scintilla/lexlib/CharacterSet.cxx' object='CharacterSet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CharacterSet.lo `test -f 'src/scintilla/lexlib/CharacterSet.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/CharacterSet.cxx

LexerBase.lo: src/scintilla/lexlib/LexerBase.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexerBase.lo -MD -MP -MF $(DEPDIR)/LexerBase.Tpo -c -o LexerBase.lo `test -f 'src/scintilla/lexlib/LexerBase.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/LexerBase.cxx
	$(am__mv) $(DEPDIR)/LexerBase.Tpo $(DEPDIR)/LexerBase.Plo
#	source='src/scintilla/lexlib/LexerBase.cxx' object='LexerBase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexerBase.lo `test -f 'src/scintilla/lexlib/LexerBase.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/LexerBase.cxx

LexerModule.lo: src/scintilla/lexlib/LexerModule.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexerModule.lo -MD -MP -MF $(DEPDIR)/LexerModule.Tpo -c -o LexerModule.lo `test -f 'src/scintilla/lexlib/LexerModule.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/LexerModule.cxx
	$(am__mv) $(DEPDIR)/LexerModule.Tpo $(DEPDIR)/LexerModule.Plo
#	source='src/scintilla/lexlib/LexerModule.cxx' object='LexerModule.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexerModule.lo `test -f 'src/scintilla/lexlib/LexerModule.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/LexerModule.cxx

LexerNoExceptions.lo: src/scintilla/lexlib/LexerNoExceptions.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexerNoExceptions.lo -MD -MP -MF $(DEPDIR)/LexerNoExceptions.Tpo -c -o LexerNoExceptions.lo `test -f 'src/scintilla/lexlib/LexerNoExceptions.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/LexerNoExceptions.cxx
	$(am__mv) $(DEPDIR)/LexerNoExceptions.Tpo $(DEPDIR)/LexerNoExceptions.Plo
#	source='src/scintilla/lexlib/LexerNoExceptions.cxx' object='LexerNoExceptions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexerNoExceptions.lo `test -f 'src/scintilla/lexlib/LexerNoExceptions.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/LexerNoExceptions.cxx

LexerSimple.lo: src/scintilla/lexlib/LexerSimple.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexerSimple.lo -MD -MP -MF $(DEPDIR)/LexerSimple.Tpo -c -o LexerSimple.lo `test -f 'src/scintilla/lexlib/LexerSimple.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/LexerSimple.cxx
	$(am__mv) $(DEPDIR)/LexerSimple.Tpo $(DEPDIR)/LexerSimple.Plo
#	source='src/scintilla/lexlib/LexerSimple.cxx' object='LexerSimple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexerSimple.lo `test -f 'src/scintilla/lexlib/LexerSimple.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/LexerSimple.cxx

PropSetSimple.lo: src/scintilla/lexlib/PropSetSimple.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PropSetSimple.lo -MD -MP -MF $(DEPDIR)/PropSetSimple.Tpo -c -o PropSetSimple.lo `test -f 'src/scintilla/lexlib/PropSetSimple.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/PropSetSimple.cxx
	$(am__mv) $(DEPDIR)/PropSetSimple.Tpo $(DEPDIR)/PropSetSimple.Plo
#	source='src/scintilla/lexlib/PropSetSimple.cxx' object='PropSetSimple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PropSetSimple.lo `test -f 'src/scintilla/lexlib/PropSetSimple.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/PropSetSimple.cxx

StyleContext.lo: src/scintilla/lexlib/StyleContext.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StyleContext.lo -MD -MP -MF $(DEPDIR)/StyleContext.Tpo -c -o StyleContext.lo `test -f 'src/scintilla/lexlib/StyleContext.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/StyleContext.cxx
	$(am__mv) $(DEPDIR)/StyleContext.Tpo $(DEPDIR)/StyleContext.Plo
#	source='src/scintilla/lexlib/StyleContext.cxx' object='StyleContext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StyleContext.lo `test -f 'src/scintilla/lexlib/StyleContext.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/StyleContext.cxx

WordList.lo: src/scintilla/lexlib/WordList.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WordList.lo -MD -MP -MF $(DEPDIR)/WordList.Tpo -c -o WordList.lo `test -f 'src/scintilla/lexlib/WordList.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/WordList.cxx
	$(am__mv) $(DEPDIR)/WordList.Tpo $(DEPDIR)/WordList.Plo
#	source='src/scintilla/lexlib/WordList.cxx' object='WordList.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WordList.lo `test -f 'src/scintilla/lexlib/WordList.cxx' || echo '$(srcdir)/'`src/scintilla/lexlib/WordList.cxx

AutoComplete.lo: src/scintilla/src/AutoComplete.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AutoComplete.lo -MD -MP -MF $(DEPDIR)/AutoComplete.Tpo -c -o AutoComplete.lo `test -f 'src/scintilla/src/AutoComplete.cxx' || echo '$(srcdir)/'`src/scintilla/src/AutoComplete.cxx
	$(am__mv) $(DEPDIR)/AutoComplete.Tpo $(DEPDIR)/AutoComplete.Plo
#	source='src/scintilla/src/AutoComplete.cxx' object='AutoComplete.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AutoComplete.lo `test -f 'src/scintilla/src/AutoComplete.cxx' || echo '$(srcdir)/'`src/scintilla/src/AutoComplete.cxx

CallTip.lo: src/scintilla/src/CallTip.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CallTip.lo -MD -MP -MF $(DEPDIR)/CallTip.Tpo -c -o CallTip.lo `test -f 'src/scintilla/src/CallTip.cxx' || echo '$(srcdir)/'`src/scintilla/src/CallTip.cxx
	$(am__mv) $(DEPDIR)/CallTip.Tpo $(DEPDIR)/CallTip.Plo
#	source='src/scintilla/src/CallTip.cxx' object='CallTip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CallTip.lo `test -f 'src/scintilla/src/CallTip.cxx' || echo '$(srcdir)/'`src/scintilla/src/CallTip.cxx

CaseConvert.lo: src/scintilla/src/CaseConvert.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CaseConvert.lo -MD -MP -MF $(DEPDIR)/CaseConvert.Tpo -c -o CaseConvert.lo `test -f 'src/scintilla/src/CaseConvert.cxx' || echo '$(srcdir)/'`src/scintilla/src/CaseConvert.cxx
	$(am__mv) $(DEPDIR)/CaseConvert.Tpo $(DEPDIR)/CaseConvert.Plo
#	source='src/scintilla/src/CaseConvert.cxx' object='CaseConvert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CaseConvert.lo `test -f 'src/scintilla/src/CaseConvert.cxx' || echo '$(srcdir)/'`src/scintilla/src/CaseConvert.cxx

CaseFolder.lo: src/scintilla/src/CaseFolder.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CaseFolder.lo -MD -MP -MF $(DEPDIR)/CaseFolder.Tpo -c -o CaseFolder.lo `test -f 'src/scintilla/src/CaseFolder.cxx' || echo '$(srcdir)/'`src/scintilla/src/CaseFolder.cxx
	$(am__mv) $(DEPDIR)/CaseFolder.Tpo $(DEPDIR)/CaseFolder.Plo
#	source='src/scintilla/src/CaseFolder.cxx' object='CaseFolder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CaseFolder.lo `test -f 'src/scintilla/src/CaseFolder.cxx' || echo '$(srcdir)/'`src/scintilla/src/CaseFolder.cxx

Catalogue.lo: src/scintilla/src/Catalogue.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Catalogue.lo -MD -MP -MF $(DEPDIR)/Catalogue.Tpo -c -o Catalogue.lo `test -f 'src/scintilla/src/Catalogue.cxx' || echo '$(srcdir)/'`src/scintilla/src/Catalogue.cxx
	$(am__mv) $(DEPDIR)/Catalogue.Tpo $(DEPDIR)/Catalogue.Plo
#	source='src/scintilla/src/Catalogue.cxx' object='Catalogue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Catalogue.lo `test -f 'src/scintilla/src/Catalogue.cxx' || echo '$(srcdir)/'`src/scintilla/src/Catalogue.cxx

CellBuffer.lo: src/scintilla/src/CellBuffer.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CellBuffer.lo -MD -MP -MF $(DEPDIR)/CellBuffer.Tpo -c -o CellBuffer.lo `test -f 'src/scintilla/src/CellBuffer.cxx' || echo '$(srcdir)/'`src/scintilla/src/CellBuffer.cxx
	$(am__mv) $(DEPDIR)/CellBuffer.Tpo $(DEPDIR)/CellBuffer.Plo
#	source='src/scintilla/src/CellBuffer.cxx' object='CellBuffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CellBuffer.lo `test -f 'src/scintilla/src/CellBuffer.cxx' || echo '$(srcdir)/'`src/scintilla/src/CellBuffer.cxx

CharClassify.lo: src/scintilla/src/CharClassify.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CharClassify.lo -MD -MP -MF $(DEPDIR)/CharClassify.Tpo -c -o CharClassify.lo `test -f 'src/scintilla/src/CharClassify.cxx' || echo '$(srcdir)/'`src/scintilla/src/CharClassify.cxx
	$(am__mv) $(DEPDIR)/CharClassify.Tpo $(DEPDIR)/CharClassify.Plo
#	source='src/scintilla/src/CharClassify.cxx' object='CharClassify.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CharClassify.lo `test -f 'src/scintilla/src/CharClassify.cxx' || echo '$(srcdir)/'`src/scintilla/src/CharClassify.cxx

ContractionState.lo: src/scintilla/src/ContractionState.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContractionState.lo -MD -MP -MF $(DEPDIR)/ContractionState.Tpo -c -o ContractionState.lo `test -f 'src/scintilla/src/ContractionState.cxx' || echo '$(srcdir)/'`src/scintilla/src/ContractionState.cxx
	$(am__mv) $(DEPDIR)/ContractionState.Tpo $(DEPDIR)/ContractionState.Plo
#	source='src/scintilla/src/ContractionState.cxx' object='ContractionState.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContractionState.lo `test -f 'src/scintilla/src/ContractionState.cxx' || echo '$(srcdir)/'`src/scintilla/src/ContractionState.cxx

Decoration.lo: src/scintilla/src/Decoration.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Decoration.lo -MD -MP -MF $(DEPDIR)/Decoration.Tpo -c -o Decoration.lo `test -f 'src/scintilla/src/Decoration.cxx' || echo '$(srcdir)/'`src/scintilla/src/Decoration.cxx
	$(am__mv) $(DEPDIR)/Decoration.Tpo $(DEPDIR)/Decoration.Plo
#	source='src/scintilla/src/Decoration.cxx' object='Decoration.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Decoration.lo `test -f 'src/scintilla/src/Decoration.cxx' || echo '$(srcdir)/'`src/scintilla/src/Decoration.cxx

Document.lo: src/scintilla/src/Document.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Document.lo -MD -MP -MF $(DEPDIR)/Document.Tpo -c -o Document.lo `test -f 'src/scintilla/src/Document.cxx' || echo '$(srcdir)/'`src/scintilla/src/Document.cxx
	$(am__mv) $(DEPDIR)/Document.Tpo $(DEPDIR)/Document.Plo
#	source='src/scintilla/src/Document.cxx' object='Document.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Document.lo `test -f 'src/scintilla/src/Document.cxx' || echo '$(srcdir)/'`src/scintilla/src/Document.cxx

Editor.lo: src/scintilla/src/Editor.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Editor.lo -MD -MP -MF $(DEPDIR)/Editor.Tpo -c -o Editor.lo `test -f 'src/scintilla/src/Editor.cxx' || echo '$(srcdir)/'`src/scintilla/src/Editor.cxx
	$(am__mv) $(DEPDIR)/Editor.Tpo $(DEPDIR)/Editor.Plo
#	source='src/scintilla/src/Editor.cxx' object='Editor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Editor.lo `test -f 'src/scintilla/src/Editor.cxx' || echo '$(srcdir)/'`src/scintilla/src/Editor.cxx

ExternalLexer.lo: src/scintilla/src/ExternalLexer.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ExternalLexer.lo -MD -MP -MF $(DEPDIR)/ExternalLexer.Tpo -c -o ExternalLexer.lo `test -f 'src/scintilla/src/ExternalLexer.cxx' || echo '$(srcdir)/'`src/scintilla/src/ExternalLexer.cxx
	$(am__mv) $(DEPDIR)/ExternalLexer.Tpo $(DEPDIR)/ExternalLexer.Plo
#	source='src/scintilla/src/ExternalLexer.cxx' object='ExternalLexer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ExternalLexer.lo `test -f 'src/scintilla/src/ExternalLexer.cxx' || echo '$(srcdir)/'`src/scintilla/src/ExternalLexer.cxx

Indicator.lo: src/scintilla/src/Indicator.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Indicator.lo -MD -MP -MF $(DEPDIR)/Indicator.Tpo -c -o Indicator.lo `test -f 'src/scintilla/src/Indicator.cxx' || echo '$(srcdir)/'`src/scintilla/src/Indicator.cxx
	$(am__mv) $(DEPDIR)/Indicator.Tpo $(DEPDIR)/Indicator.Plo
#	source='src/scintilla/src/Indicator.cxx' object='Indicator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Indicator.lo `test -f 'src/scintilla/src/Indicator.cxx' || echo '$(srcdir)/'`src/scintilla/src/Indicator.cxx

KeyMap.lo: src/scintilla/src/KeyMap.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeyMap.lo -MD -MP -MF $(DEPDIR)/KeyMap.Tpo -c -o KeyMap.lo `test -f 'src/scintilla/src/KeyMap.cxx' || echo '$(srcdir)/'`src/scintilla/src/KeyMap.cxx
	$(am__mv) $(DEPDIR)/KeyMap.Tpo $(DEPDIR)/KeyMap.Plo
#	source='src/scintilla/src/KeyMap.cxx' object='KeyMap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeyMap.lo `test -f 'src/scintilla/src/KeyMap.cxx' || echo '$(srcdir)/'`src/scintilla/src/KeyMap.cxx

LineMarker.lo: src/scintilla/src/LineMarker.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LineMarker.lo -MD -MP -MF $(DEPDIR)/LineMarker.Tpo -c -o LineMarker.lo `test -f 'src/scintilla/src/LineMarker.cxx' || echo '$(srcdir)/'`src/scintilla/src/LineMarker.cxx
	$(am__mv) $(DEPDIR)/LineMarker.Tpo $(DEPDIR)/LineMarker.Plo
#	source='src/scintilla/src/LineMarker.cxx' object='LineMarker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LineMarker.lo `test -f 'src/scintilla/src/LineMarker.cxx' || echo '$(srcdir)/'`src/scintilla/src/LineMarker.cxx

PerLine.lo: src/scintilla/src/PerLine.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PerLine.lo -MD -MP -MF $(DEPDIR)/PerLine.Tpo -c -o PerLine.lo `test -f 'src/scintilla/src/PerLine.cxx' || echo '$(srcdir)/'`src/scintilla/src/PerLine.cxx
	$(am__mv) $(DEPDIR)/PerLine.Tpo $(DEPDIR)/PerLine.Plo
#	source='src/scintilla/src/PerLine.cxx' object='PerLine.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PerLine.lo `test -f 'src/scintilla/src/PerLine.cxx' || echo '$(srcdir)/'`src/scintilla/src/PerLine.cxx

PositionCache.lo: src/scintilla/src/PositionCache.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PositionCache.lo -MD -MP -MF $(DEPDIR)/PositionCache.Tpo -c -o PositionCache.lo `test -f 'src/scintilla/src/PositionCache.cxx' || echo '$(srcdir)/'`src/scintilla/src/PositionCache.cxx
	$(am__mv) $(DEPDIR)/PositionCache.Tpo $(DEPDIR)/PositionCache.Plo
#	source='src/scintilla/src/PositionCache.cxx' object='PositionCache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PositionCache.lo `test -f 'src/scintilla/src/PositionCache.cxx' || echo '$(srcdir)/'`src/scintilla/src/PositionCache.cxx

RESearch.lo: src/scintilla/src/RESearch.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RESearch.lo -MD -MP -MF $(DEPDIR)/RESearch.Tpo -c -o RESearch.lo `test -f 'src/scintilla/src/RESearch.cxx' || echo '$(srcdir)/'`src/scintilla/src/RESearch.cxx
	$(am__mv) $(DEPDIR)/RESearch.Tpo $(DEPDIR)/RESearch.Plo
#	source='src/scintilla/src/RESearch.cxx' object='RESearch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RESearch.lo `test -f 'src/scintilla/src/RESearch.cxx' || echo '$(srcdir)/'`src/scintilla/src/RESearch.cxx

RunStyles.lo: src/scintilla/src/RunStyles.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RunStyles.lo -MD -MP -MF $(DEPDIR)/RunStyles.Tpo -c -o RunStyles.lo `test -f 'src/scintilla/src/RunStyles.cxx' || echo '$(srcdir)/'`src/scintilla/src/RunStyles.cxx
	$(am__mv) $(DEPDIR)/RunStyles.Tpo $(DEPDIR)/RunStyles.Plo
#	source='src/scintilla/src/RunStyles.cxx' object='RunStyles.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RunStyles.lo `test -f 'src/scintilla/src/RunStyles.cxx' || echo '$(srcdir)/'`src/scintilla/src/RunStyles.cxx

ScintillaBase.lo: src/scintilla/src/ScintillaBase.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScintillaBase.lo -MD -MP -MF $(DEPDIR)/ScintillaBase.Tpo -c -o ScintillaBase.lo `test -f 'src/scintilla/src/ScintillaBase.cxx' || echo '$(srcdir)/'`src/scintilla/src/ScintillaBase.cxx
	$(am__mv) $(DEPDIR)/ScintillaBase.Tpo $(DEPDIR)/ScintillaBase.Plo
#	source='src/scintilla/src/ScintillaBase.cxx' object='ScintillaBase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScintillaBase.lo `test -f 'src/scintilla/src/ScintillaBase.cxx' || echo '$(srcdir)/'`src/scintilla/src/ScintillaBase.cxx

Selection.lo: src/scintilla/src/Selection.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Selection.lo -MD -MP -MF $(DEPDIR)/Selection.Tpo -c -o Selection.lo `test -f 'src/scintilla/src/Selection.cxx' || echo '$(srcdir)/'`src/scintilla/src/Selection.cxx
	$(am__mv) $(DEPDIR)/Selection.Tpo $(DEPDIR)/Selection.Plo
#	source='src/scintilla/src/Selection.cxx' object='Selection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Selection.lo `test -f 'src/scintilla/src/Selection.cxx' || echo '$(srcdir)/'`src/scintilla/src/Selection.cxx

Style.lo: src/scintilla/src/Style.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Style.lo -MD -MP -MF $(DEPDIR)/Style.Tpo -c -o Style.lo `test -f 'src/scintilla/src/Style.cxx' || echo '$(srcdir)/'`src/scintilla/src/Style.cxx
	$(am__mv) $(DEPDIR)/Style.Tpo $(DEPDIR)/Style.Plo
#	source='src/scintilla/src/Style.cxx' object='Style.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Style.lo `test -f 'src/scintilla/src/Style.cxx' || echo '$(srcdir)/'`src/scintilla/src/Style.cxx

UniConversion.lo: src/scintilla/src/UniConversion.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UniConversion.lo -MD -MP -MF $(DEPDIR)/UniConversion.Tpo -c -o UniConversion.lo `test -f 'src/scintilla/src/UniConversion.cxx' || echo '$(srcdir)/'`src/scintilla/src/UniConversion.cxx
	$(am__mv) $(DEPDIR)/UniConversion.Tpo $(DEPDIR)/UniConversion.Plo
#	source='src/scintilla/src/UniConversion.cxx' object='UniConversion.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UniConversion.lo `test -f 'src/scintilla/src/UniConversion.cxx' || echo '$(srcdir)/'`src/scintilla/src/UniConversion.cxx

ViewStyle.lo: src/scintilla/src/ViewStyle.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViewStyle.lo -MD -MP -MF $(DEPDIR)/ViewStyle.Tpo -c -o ViewStyle.lo `test -f 'src/scintilla/src/ViewStyle.cxx' || echo '$(srcdir)/'`src/scintilla/src/ViewStyle.cxx
	$(am__mv) $(DEPDIR)/ViewStyle.Tpo $(DEPDIR)/ViewStyle.Plo
#	source='src/scintilla/src/ViewStyle.cxx' object='ViewStyle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViewStyle.lo `test -f 'src/scintilla/src/ViewStyle.cxx' || echo '$(srcdir)/'`src/scintilla/src/ViewStyle.cxx

XPM.lo: src/scintilla/src/XPM.cxx
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XPM.lo -MD -MP -MF $(DEPDIR)/XPM.Tpo -c -o XPM.lo `test -f 'src/scintilla/src/XPM.cxx' || echo '$(srcdir)/'`src/scintilla/src/XPM.cxx
	$(am__mv) $(DEPDIR)/XPM.Tpo $(DEPDIR)/XPM.Plo
#	source='src/scintilla/src/XPM.cxx' object='XPM.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XPM.lo `test -f 'src/scintilla/src/XPM.cxx' || echo '$(srcdir)/'`src/scintilla/src/XPM.cxx

.cxx.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-sdkHEADERS: $(sdk_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(sdk_HEADERS)'; test -n "$(sdkdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sdkdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sdkdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(sdkdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(sdkdir)" || exit $$?; \
	done

uninstall-sdkHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(sdk_HEADERS)'; test -n "$(sdkdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(sdkdir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(sdkdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-sdkHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-sdkHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-sdkHEADERS install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-sdkHEADERS

README: $(srcdir)/Readme
	cp -p $< $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
